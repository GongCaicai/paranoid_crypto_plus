# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Tests for paranoid_crypto.lib.paranoid.

This is a regression test with the purpose to find gaps in paranoid and to
ensure that keys that were previously recognized as weak are not suddenly
dropped by modifications of the code.
The test contains a large number of RSA keys, that are potentially weak.
There is no expectation to find all the factorizations, since some of the
primes in the list may be random and were generated twice because reusing RNG
seeds.
"""
from absl import logging
from absl.testing import absltest
from paranoid_crypto import paranoid_pb2
from paranoid_crypto.lib import paranoid
from paranoid_crypto.lib import util


class RegressionTest(absltest.TestCase):

  def rsa_test_keys(self):
    """Returns a list of test keys.

    The first 119 keys were generated with the primes from
    https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    Each key is generated by selecting p as a prime listed in the paper
    and chose q randomly.
    The remaining keys were generated with specified weaknesses in mind.
    In some cases, hints are given in comments but these hints are not
    used by the tests.

    Returns:
      a list of pairs, where the first element is an RSAKey proto buffer
      and the second element is True if the key is expected to be detected
      as weak and False otherwise.
    """

    rsa_keys = []

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000000000000000000000000000000000000000000000000000000000000
    #       00000000000000000000000000000000000000000000000000000000000002f9
    rsa_key_0 = paranoid_pb2.RSAKey()
    rsa_key_0.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_0.rsa_info.n = util.Hex2Bytes(
        '9cadefc8581b59c8f564af9bfc1c74f40bf2f06c87cee570d32b9227eabd256082bdbcd4adf9dd443a1d17aad63d3799b43fd2ba134454f764e5cf63f7b59ecc4167b8bd37128881f5bd5e40961f8c9f5c3b98d4f2b565da50b1f63665b02530dd5dc5a18fae551655f9ce73cff85fe117a1e42f082b6f393edcaae47927c987'
    )
    rsa_keys.append((rsa_key_0, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc924249224929249924949244924249224929249924949244924249224929249
    #       92494924492424922492924992494924492424922492924992494924492424e5
    rsa_key_1 = paranoid_pb2.RSAKey()
    rsa_key_1.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_1.rsa_info.n = util.Hex2Bytes(
        'b30f67ca06c721d184433e9ea6a196ece59e4eb3d806d9f3d3d6d71150bc831a4f3efa3454022492de536cec9d36deb522c0cb4e374f0d993080d81cefe3c1d07063532d0c6120e225693f0dc1cca9a41c0e8603b778ae8b3d8c9bf77abbabadd9379a4be250bda96f75166055d2d6a15bf6865cc0b96322943ebc1f63f92e33'
    )
    rsa_keys.append((rsa_key_1, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000000000000000000000000000000000000000000000000000000000000
    #       00000000000000000000000000000000000000000000000000000000000101ff
    rsa_key_2 = paranoid_pb2.RSAKey()
    rsa_key_2.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_2.rsa_info.n = util.Hex2Bytes(
        '8c84e874f3092238f8cbb1c50c74dc67f8cb7e7e8a240f5495adb9a349b2b1d374001ad503ba1c2c5f6da8e6285837d716d09b2f18445454378da8880e75a6759d0145f85745b605c07bdbb64ce53b1c26400ba267143f5b548bc8d91205e170deb8c3e610e37aaadbb86503aa9366dedcc679b25ba0ba3610649d625c02d27b'
    )
    rsa_keys.append((rsa_key_2, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd249492449242492249292499249492449242492249292499249492449242492
    #       24929249924949244924249224929249924949244924249224929249924949d7
    rsa_key_3 = paranoid_pb2.RSAKey()
    rsa_key_3.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_3.rsa_info.n = util.Hex2Bytes(
        'a1b69878a58ebe82c88f47ec23eb3512efd812830c178fee3f4da2ceabde9991b4a269add478f1c0cfd5ea5b6433b7f06b0697313af77e2ef619a805f88ccd3c040b641557b75f9083ed0f1a30f705fabe08f2965a9bd30a4042cdbfa8f2fbab85bf0279d75b5ea365d7a5c6099326e6749279a648fcc54f25f54e8039e7c1b9'
    )
    rsa_keys.append((rsa_key_3, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db6
    #       6db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdbc1
    rsa_key_4 = paranoid_pb2.RSAKey()
    rsa_key_4.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_4.rsa_info.n = util.Hex2Bytes(
        'f56d9895179541113b5438dc7a6c3ffe9d7e1aaef48c312826d8fb8935dcf1c89119d468617753e64d083182061a05d6b8ee77e6d4178da0a4b115d7b4177eb8da4ad2b46c9269ea4e3783b886fc7b8b459eead894fc5755594c61da5e331034f0bc7ba31720c8e6b1de29f8dc22e94948372576dc3cce01620c6f51bef8e0a7'
    )
    rsa_keys.append((rsa_key_4, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xdb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6db
    #       b6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6c6e23
    rsa_key_5 = paranoid_pb2.RSAKey()
    rsa_key_5.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_5.rsa_info.n = util.Hex2Bytes(
        'c5fdec79909c861aea548a38c81b8f53b75979001ad0487d7ff8e1895eab63e0da05c96bcbbe0646753053f5f1620daf9e14a04451a144c186555cc454f59128cfd208a578bf3039bba10b97525ece564eff5651342dc04bd101bead947467b774c0a2923957622b6e257e916c685196a10e539887d5dd23132117e2ee1f52d5'
    )
    rsa_keys.append((rsa_key_5, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xedb6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6d
    #       db6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b867
    rsa_key_6 = paranoid_pb2.RSAKey()
    rsa_key_6.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_6.rsa_info.n = util.Hex2Bytes(
        'e4182b3e1ce93ed527f31da87706050a23e096fb461c12431da6bdea01f38b7a4f66ac1708eec9ef451eaaaab303042622078aa1197e5976fe868326f150601afbb5c9152f946b285e9e37ae6cafb3723ca616b4b0790f34b451b79fe18b698b57f1ade566c06158d4f797f3cf0eecb90f8045b4932bdc2c05bc5efa447459bf'
    )
    rsa_keys.append((rsa_key_6, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd084084242102108084284212108108484214210108408424210210808428421
    #       2108108484214210108408424210210808428421210810848421421010840985
    rsa_key_7 = paranoid_pb2.RSAKey()
    rsa_key_7.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_7.rsa_info.n = util.Hex2Bytes(
        '90796462c5b445b658aa1b1dc3a24cd80ad21c472eda597e4459739ff2ca2c6a3987390e9a003ffaec532ab669d8f4e9da018e4e65ea34987d01bc87d89e5d70202c75ccf5878629b9b58cf88ef88c53a285ed96e1a9b26a5a04167617f44aac39ca63d1fef152f7a17a2668e23e368af26aa0eda78de63c4d652db5a49986ed'
    )
    rsa_keys.append((rsa_key_7, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe000000000000000000000000000000000000000000000000000000000000000
    #       000000000000000000000000000000000000000000000000000000000000000f
    rsa_key_8 = paranoid_pb2.RSAKey()
    rsa_key_8.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_8.rsa_info.n = util.Hex2Bytes(
        '9f6952a448998566807baa9b3bc1dbc7f0a34217ab88c4e3c381de60b19ba1e82a5645099ecc948834f0e39ae5caf39e1bf1b09db1e71013b214bcb22ebd372c8cc46424dc90eedd2cda481c006900d141ca23deea4d2f4085449b0be4b520b08ca2565bc6d7a91ef946193ad104e2967153d3b3e9c2382d11637e37b3871ed7'
    )
    rsa_keys.append((rsa_key_8, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf5ad5ad6d6b56b5a5ad6ad6b6b5ab5adad6bd6b5b5ad5ad6d6b56b5a5ad6ad6b
    #       6b5ab5adad6bd6b5b5ad5ad6d6b56b5a5ad6ad6b6b5ab5adad6bd6b5b5ad5d39
    rsa_key_9 = paranoid_pb2.RSAKey()
    rsa_key_9.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_9.rsa_info.n = util.Hex2Bytes(
        'b6cac51d840ae4233496a57dfd46bca4ea69909c9ae25d5075c9f1ab3427957717520c3bbd1058b82a1af8931f037016c46797b599ace89adf957e295d8e057d2e77fbfee36ad26721975c82c37b7c69a6e7bc3514ea166c337566d9316d994a0dfd19e97366458517167af27eabbeade4676651f3e267bf82afee70780f85bf'
    )
    rsa_keys.append((rsa_key_9, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc28550a128500a14850aa14250a114280a144285a14228501428850a428550a1
    #       28500a14850aa14250a114280a144285a14228501428850a428550a128500a6f
    rsa_key_10 = paranoid_pb2.RSAKey()
    rsa_key_10.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_10.rsa_info.n = util.Hex2Bytes(
        '9809695c0d9a86fa108e51e2afd2cdb2cbada80403dd7bed2312316c0695a14226fe11b9aee14afb9149da46858586bbe1ad51f74a99ccfbd556d3c9afdf67410c551bbef3c9e9e7232e5b87ff3dae40d83d6dbfdaf49ae5dcfc1d737cb30a08b060c7c70685746ae0f014508a2c265cc43445c595457f11877e9596e5015a83'
    )
    rsa_keys.append((rsa_key_10, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b
    #       7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefe0b1
    rsa_key_11 = paranoid_pb2.RSAKey()
    rsa_key_11.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_11.rsa_info.n = util.Hex2Bytes(
        'b3c905db76520225659f14ab2c0f603b3ebc1695cffd577b5a32b969061ce171cd2b1640bd19f9087f3b0367524341538c3717682970c68e3ead3982e35105b21788f1d1a7f09e6ba8008cc8af9608db81da0dd49c858563209aa0649588c0fb567389055d1d14d91ace45100731df3d9e63caeaebd04bda8d19df3df1783f17'
    )
    rsa_keys.append((rsa_key_11, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd249492449242492249292499249492449242492249292499249492449242492
    #       2492924992494924492424922492924992494924492424922492924992484a0f
    rsa_key_12 = paranoid_pb2.RSAKey()
    rsa_key_12.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_12.rsa_info.n = util.Hex2Bytes(
        '9d68111a2ad7c8c52fbb0087105d76591bd31cea9040fb756229fa95f2294ba46993daa470c45224adf7ef595a351cb5dad50231fe86b4f1ed9d2cb1353bb51e5d1b3749be17baca940465d4f928283d5b8ad85c9382baef8010e718e61271f8cd2118c2ba14283b5021109329d70c21db742e6526b5d69b0f0d56e737b62c5f'
    )
    rsa_keys.append((rsa_key_12, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe94a94a5a529529494a54a525294294a4a52a529294a94a5a529529494a54a52
    #       5294294a4a52a529294a94a5a529529494a54a525294294a4a52a529294b9af5
    rsa_key_13 = paranoid_pb2.RSAKey()
    rsa_key_13.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_13.rsa_info.n = util.Hex2Bytes(
        'db21d8897349c4e7aa51fc51b160a8d71d94b5c2313c3200ea100aea11229162fb3b773116c828e120aa222ad01f4ef2a422cd48a3e9b6ed8aa5a6f280666eab53a8749655b3ea6883790f202730e5588b258b586f93cf13ff4be5c5ee32e509f46b6f7948c7a79660c0c0ccc06f06e132395ea834e4d1f1cb00427d1dadc54f'
    )
    rsa_keys.append((rsa_key_13, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xdb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6db
    #       b6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d7015
    rsa_key_14 = paranoid_pb2.RSAKey()
    rsa_key_14.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_14.rsa_info.n = util.Hex2Bytes(
        '85d1091fb3c4d0f023846e7a372a732d25c6ea22fa3c0cb81d4d704030e9f194f3f10ec767731afd5f400666ffc46657d0932fa09e4723a56e799f75d76b218f5b324198035ac6772921af612a6ada92c4727b50d0656e9b96dfa46cb9e37d8e51a71546ed6e775f1631177e777dd54a3d4c7e099dd0efce784a2de26979407d'
    )
    rsa_keys.append((rsa_key_14, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xca52a529294a94a5a529529494a54a525294294a4a52a529294a94a5a5295294
    #       94a54a525294294a4a52a529294a94a5a529529494a54a525294294a4a52a601
    rsa_key_15 = paranoid_pb2.RSAKey()
    rsa_key_15.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_15.rsa_info.n = util.Hex2Bytes(
        'ca4bff25ae609c83bae53b748799dd800918728823fb7135c420124262abdbc1cb7216976ce07c3508af6d82fe28882dc60dcb71d7c4229656bc38701a163c4dc2cb9b39ca06c04423661dc816a12e5220e27fb3c7335c0495021ad33cc3cf5c9fdbe417c9e05d2cacb69f1f8c5b3141e9d9c31eba20548c2027e293ae662645'
    )
    rsa_keys.append((rsa_key_15, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000000000000000000000000000000000000000000000000000000000000
    #       000000000000000000000000000000000000000000000000000000000002030b
    rsa_key_16 = paranoid_pb2.RSAKey()
    rsa_key_16.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_16.rsa_info.n = util.Hex2Bytes(
        '9d8a6cf77ef5becd269f654840e5276b235ba0082ef069e63d5191dd42ed799d4a59b2e0b03254fb43ce7a28ec4290a2232e993dfe4a270ef30b12f4a34d4ffb3d8b6eb919dd34af17779b8a6031a24fca8073b4e1d3a2ffa3ec82dccfcf8870db9b98266ed42af0622a19656a6dda5301b5baf6cd03ab6fa0cff15af7fbdfd9'
    )
    rsa_keys.append((rsa_key_16, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd8c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631
    #       318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c69107
    rsa_key_17 = paranoid_pb2.RSAKey()
    rsa_key_17.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_17.rsa_info.n = util.Hex2Bytes(
        'b829edacdf0d8ef78012eef480dc62e500aeaa315cdab1d00d6e76d8259b229172d451ed94f4ee5ac73abd126d37c024994ba8ed3da6d56cda7e6032d42e66185f7665e0934370df8d2fd93826757cab11ff74cee516f7cdbc7c085927c6439a2e079360672a21edcae6153ac04f36e7272ce224728255d296f3440eed64ee33'
    )
    rsa_keys.append((rsa_key_17, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf18c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c63
    #       6318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c1907
    rsa_key_18 = paranoid_pb2.RSAKey()
    rsa_key_18.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_18.rsa_info.n = util.Hex2Bytes(
        'abcf380e9ef83b95529b8a66ba2c6e60ccd282cc23bd827970afaa3cd10a7760a301885b9cc0ec409ce5468a5416760829e98b4cb939bcf5304a00cb6b1b24bdce70ae52fd1475f55244736732f0d4f1403b9169e9dc0465117b665043e4b030c4e0de70fcd735c9774268455002b1d96ccb3882cf7fddf37515c3a528ccded7'
    )
    rsa_keys.append((rsa_key_18, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdef
    #       ef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd8289
    rsa_key_19 = paranoid_pb2.RSAKey()
    rsa_key_19.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_19.rsa_info.n = util.Hex2Bytes(
        'f0a97fcd6c215c4f3c4bcfaacfda3acbc4d6cbcb1259f620636648e51c5d76042fb1e36ef975707a97be65139e76701bd6c73408f16e2f6915352e887cb5adf9581a22ee0981825bacc85adb3c6af85730800dfce852973ee99951cc10666cd4fd9f4c7aea50b3656659f89aa29b530ad657c588702f67f80fc71d78f6e4aebd'
    )
    rsa_keys.append((rsa_key_19, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc421421010840842421021080842842121081084842142101084084242102108
    #       0842842121081084842142101084084242102108084284212108108484214369
    rsa_key_20 = paranoid_pb2.RSAKey()
    rsa_key_20.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_20.rsa_info.n = util.Hex2Bytes(
        'bc5e0eb10feb9c50c2e9176dd98ed722478b62579d1f8c9be597e432a384ee1c9000d1bb343e588aaecd305e79d0a33430ef1d84c2c1a31b2884e209dfd0ea9efc4f022e55e88d1deb34405425b7b558038557986cb86fe47a521577ac3efae4d3cfbbe32e6cfe5a22e86246d8f7bc5aec7175e05c63f03779abe8968e3b8dff'
    )
    rsa_keys.append((rsa_key_20, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bde
    #       def7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf969
    rsa_key_21 = paranoid_pb2.RSAKey()
    rsa_key_21.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_21.rsa_info.n = util.Hex2Bytes(
        '91d2caa85099e42f1ee7945535a3fe0508fd1b5c6c935590bb1717bb79757994aace30419690a150d59390b44ea7d7b34fe295dc7124009f5aa82ca5054c4fb46a21caba8adf9c65cf2b1dc11585981b9d4e3ae0399784d917f0cb51726ec34381e2c7f5c76870f96a2c79936f22a7ae646eacbe4b36cb4820e694050f73b993'
    )
    rsa_keys.append((rsa_key_21, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd4e682e94f1d6018a02056c0db850a74b3591b0f840514ce4017b2f5d25925ba
    #       2429a66e384b5be96e6a0a03d4a11eba10416018de3b3e354477250037b6f813
    rsa_key_22 = paranoid_pb2.RSAKey()
    rsa_key_22.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_22.rsa_info.n = util.Hex2Bytes(
        '88061eb9daa031c3ba53fd2f2e6607190b372c7ed50ce1e764b3844ac8689aeb06c4be0bd53d9363ce4cc8b627b1309310c9f58e5f8e4924fb5286f282baacdf5acc6648f3264b92782b7c2a3028cca965ee1e3689ac8e02ff5e8e5cd8d4eeb48f396ee1cd5226f549e634e01307b74d24a6726627a303e17d8c7fe3b1372a4f'
    )
    rsa_keys.append((rsa_key_22, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcac05be5c1eabf0c21f8e95ce5d3c0777904282d1fd0c1738d727e197a0a32fd
    #       a4cc59cc50b99d29f7fa8d07c972402ab88573e255db6bab05505812c73c2911
    rsa_key_23 = paranoid_pb2.RSAKey()
    rsa_key_23.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_23.rsa_info.n = util.Hex2Bytes(
        '820fc8c8abc9965ed9704835f2fbee5ef3468d7d1c804fe94881a2d85741a42772164201b3da2a416ad2f0a03b9ff61b09a0f9b780e2c5413fe232e630a0461ffe566c635e66062ee575fc211449190278067070f1cc6905ba520775ec66487bf8e0b21f289ac72476647d5b47a814702f3f39c21cd2952df76487fad99e4a6b'
    )
    rsa_keys.append((rsa_key_23, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcf052499061243cd82cd1b2059446c963487834d929ac929d92b259245254c78
    #       28ed3e92259292c924d24947d4896d1545f4001029b3b265d0ea4d144e242dbd
    rsa_key_24 = paranoid_pb2.RSAKey()
    rsa_key_24.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_24.rsa_info.n = util.Hex2Bytes(
        '8b2cea3cf1e14156fee2315116b66ffcb6b9b9af4a25676c4ca0164b0241a7d15b303b9de2a43cf625c1a00e3e544f9de263604d1091633c32b9303ce7a686d033a72cf3908f91f8eb95d404a5ab01f8c7c29d397c843efef5ad8939ff4cc5a46440e28557d9f124711a56ef23ddb312195722a20d5c808820c8a1836bc9a02d'
    )
    rsa_keys.append((rsa_key_24, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfa94a972e2dcff068ee1257e228b53e9b9fcf46877f07daaa4d13c2bedf132d0
    #       7730f549f4691f68553f84be8ff405f16a663d8fb8f82987bd9e073a8108edc3
    rsa_key_25 = paranoid_pb2.RSAKey()
    rsa_key_25.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_25.rsa_info.n = util.Hex2Bytes(
        'b76380232b7f23f8c2ceb366dd5af2d405548bad8df89b1d923a7a0549a6fb0c63e377675dde5cf3edde85b4906c8d4068bfeca6eaa96c069f566a369929cf5926ca8ab069eb8d9a744fc3efa4a481a385d1d0588f7aa794dc9722f457eb22203a0fb2b36d10b60bf57aa31ffecf8b6a1668951f83cc6f4bc7a2b346457afdd7'
    )
    rsa_keys.append((rsa_key_25, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xef7befbdbdef9ef6f7bd7bde9ef7ef7b7bdd9dcfef7b37bd9feddef7b7bd7bde
    #       dee6ef3b5bde3de7ed7bfa99adebdef7b7bd77d7cff1ee7b7bdebdeeef79f8ab
    rsa_key_26 = paranoid_pb2.RSAKey()
    rsa_key_26.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_26.rsa_info.n = util.Hex2Bytes(
        'd8c24e98e84c577489b5853f6edc77a9dd7285a0c01c1086cb96d12281c4f98d2e5b7c4899b2b96383bc9b211a82ad83c70220cb01a1297d158aac2465594224132ed035bde6b7f649bd375d69e2e233777176b16abad2cab998760b4941ffa712b9de376ebd451b39fe92d5f776640fded510e0a787cedbb6d99174e219c049'
    )
    rsa_keys.append((rsa_key_26, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xeeb2919e1dc9ce33c2a0d9e190465b164a53c7c03e9a3d009ecf8fd6bdf743e0
    #       4444332b7ff4a0e8f53b5123a5422563a06a487cd6cb5f36cd5411f0ae4dbc69
    rsa_key_27 = paranoid_pb2.RSAKey()
    rsa_key_27.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_27.rsa_info.n = util.Hex2Bytes(
        'd835c4b4d84bf574f5bbf3c5d5f7a86cc043f1886dad8ad0042aa464bcf78d646632363db0714a59cda9c63f9e73030c027fb0694bf5fe6cced6aaa18872b98b9bc745a73fd813d7d2978a7cde4670c15d2b5371b1e256e67d01d31bdb64ae11c7d1d8c5da7219a913a64dd16b3a0a63d0a1c61b506a5dc8962b285844c592af'
    )
    rsa_keys.append((rsa_key_27, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf51576e530188d59bbc5f4f6ec9e824d7a9e70142952b11c49a6f38188ad9dbe
    #       3d29d1d9498b7aeffc4d9b0420f71895f62e2a7b79d4887e45b6227e0b84fb97
    rsa_key_28 = paranoid_pb2.RSAKey()
    rsa_key_28.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_28.rsa_info.n = util.Hex2Bytes(
        '85e7424535a6b5c329e5d7660254b51745a1f6de2c8374e738d193e9341d05049d6d2f691fe792a178db71876a74838d66331243a318e3732432547216d6ffa94a095adbd0a42ad6246bc74a2b852256fa3e73d96cf06324066ab9e77fcac1d097e03360ddc40b0fef4f283028f8bd42da612f1200860e1d8e9f9c2ed84d5c0d'
    )
    rsa_keys.append((rsa_key_28, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd83f22a49af67d7f196df580d514464d6dbb880b03bea50ddcc1f931ef7f09af
    #       2f880de26d88cbf24567302a0d6eed7c8eab859aa0c1cc18bd8efacdce194c13
    rsa_key_29 = paranoid_pb2.RSAKey()
    rsa_key_29.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_29.rsa_info.n = util.Hex2Bytes(
        'd0f861588001393809b1b02fa44060316339f416a0368a5d0342a8279a5cebe60ba13507e4b8f273cb5ca6c7e66fe269a592244b006a1dcae6732d3656e2ba64a93136226fdbb6074dc94e5130455e9cce3590500f740600a9fb6028d805ca8da61e6bbe5e7c78f5e73f5d02b7cf5887f5fd88226a2f6546f0ae8fafaffafa69'
    )
    rsa_keys.append((rsa_key_29, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc1df3e8db5f7b7f456edc1f60d23f60360536565836ce37af6f02e55de24a8dc
    #       373f3c5d49c93ba6fee0d44d08bc5fb0655781adee5c05777fd4da2bcd803d0f
    rsa_key_30 = paranoid_pb2.RSAKey()
    rsa_key_30.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_30.rsa_info.n = util.Hex2Bytes(
        'bdb5f3a40411c0e55e3fa145a1f7ee1a027bdd194e189603c68a5472f57650a3a507ea874906bf17ba75b30bbc782ea451fd5174f8b95c34fd1e1872ef46093866e49b9851cf66ebad6a1fdfb17becec8220375bba84f900a7061bfc9b48815002ea3b93febe9f73cf49e61c49dac7a42815d612e410a52e9abdfdda88db5b95'
    )
    rsa_keys.append((rsa_key_30, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe279872638463a0a32a1412b13efccfa5ed68db44963c7f6955a3816bcaa33f9
    #       4794c8b75298ddf4a8664e485ef99e6d9469f5187939e395cb1f09e666786741
    rsa_key_31 = paranoid_pb2.RSAKey()
    rsa_key_31.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_31.rsa_info.n = util.Hex2Bytes(
        'c9eda38d59d23bcc8fd3439023a5827cf6d5a363f219c27e92e8a9ffe7b45d87369b30cc5d1053349e02e2cc1a926456d4574d704b3a779d46b880a7eea2d00837df22913c2ef57a103b8a3faf10e1b7ccbddd1b2ce25a23ea333c8e412eb663f6b7574559a92c3ac7e85501941793e4e587f0d65ba9292a9a0e4f5138114cb7'
    )
    rsa_keys.append((rsa_key_31, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xce73e73939ce9ce7e738739c9ce7ce73739c39cece73e73939ce9ce7e739739c
    #       9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39cece73ead7
    rsa_key_32 = paranoid_pb2.RSAKey()
    rsa_key_32.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_32.rsa_info.n = util.Hex2Bytes(
        'c34da3f5a608b6b0323b83ef480b0e45a0201bae80453e962b2e72ee1d6f5723fac48cca05591fb12a1980c00469635ccb5f6a750723feaac4ab5fb57c60a485c6225f022b15a7735698d286febd24f5fb18931ab12371835d69aa7027962b51b3a8881f8c24713e05e30ab7a411f9e373a523463cb60f065cfe8ff3e4d76891'
    )
    rsa_keys.append((rsa_key_32, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd92ae5c6453efec55c5614207827de2b77bf3ef027f4230f8aac1fd9b0d69fdc
    #       61934132766f8dd1d8cb22ec38d834037eff6d9dd3535b9e582fbdd2327c9ce5
    rsa_key_33 = paranoid_pb2.RSAKey()
    rsa_key_33.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_33.rsa_info.n = util.Hex2Bytes(
        '97cca5deb94128ea6ba89020bace8715b62c473fa4532336af23091ff063a7e7b3848e73f0b7791f6b470d37f620821d188f01145446512300e58cc87572a54b43ebb15c2ca4c8273949ea807151a43b81669e3f8730aad61b92e1542fc5d652f04864bea647f408d5a88c00e29893112821b93346c71f1bda1e9f00bd15153f'
    )
    rsa_keys.append((rsa_key_33, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc080000000000000000000000000000000000000000000000000002000000000
    #       000000000000000000000000000000000000000000000000000000000001003f
    rsa_key_34 = paranoid_pb2.RSAKey()
    rsa_key_34.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_34.rsa_info.n = util.Hex2Bytes(
        'a34c66baf6ab65c416edf554b783544037490652848251d984567107cda4057f9835f6d1f8106dbf5b3ca98f805a51452d76b2d69e3a9837af770de5cd0bf6f7b496f6c9db8ae8946e78ef8a266da4c450d7f49405913860a1eea5fbe8f2e07cf76b1e3f275d38a4086fe6ab547d79876267890e9db61385ce93d414cf60ddff'
    )
    rsa_keys.append((rsa_key_34, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfff7fffffefffffffffffffffffffffe7ffffff7fffffffffffffffffffffd7f
    #       fffffbffffff7bfffbfcffff7fffffffffbf00000000000000000000000000c1
    rsa_key_35 = paranoid_pb2.RSAKey()
    rsa_key_35.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_35.rsa_info.n = util.Hex2Bytes(
        'c773dae5dddcba1b490486983e952a81d05a54aebc39db3ee337c597d2f1a7583fee0a5f05847f5f0085b45d8990abb911dcaff2d08d3834e36617c6171ee0b2e521dfedec8e750cac58356a5393a3b4a3b6761c4b6d26943ebbf7f98a54123db4c31d3d9cf2d2b8006fdf6ae722857e6562ae5478718b5397b23e9d6a166993'
    )
    rsa_keys.append((rsa_key_35, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xeb6f80ff65b4a6d462cfa5961f542f25e207667752b0482f5ac9dc091f4dc854
    #       de9c73b288aaa5da5298a33928f7b2920f89b81e3635932bc9db99a34e52b82b
    rsa_key_36 = paranoid_pb2.RSAKey()
    rsa_key_36.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_36.rsa_info.n = util.Hex2Bytes(
        '803d9a0bee832c49b6076c9267de4f2a320ed1c76efd82b41d66e60dc02d5fc94a83152446f2ad946c52e176ff7b0013016a2cfc0159f511543ffa38d86281ea48a48a07efaec184a96bfdd04ba3cf67d3871104bb15e019338a3e8d3ed402e02396977138ad4e2929235a128e49df4642fb62b95e99f59d93bd1d683b7db67f'
    )
    rsa_keys.append((rsa_key_36, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfdf7b9bffbffdebeb28592b76f69bbffbffdafaeffd9f7bdf1ee7bfa6e2f33bb
    #       67d5a5b5676d2bf6a1de3626f06be367ffde73db1e01f5d3855f21f0eda8b4db
    rsa_key_37 = paranoid_pb2.RSAKey()
    rsa_key_37.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_37.rsa_info.n = util.Hex2Bytes(
        'f9ab90a2cfd98ed3149319697692767712a093cdb51dfc59b5aae8666e2d6e37dfb1c72e35e2e47184f76c3dcb3005e6c8ed940da61fade95a47de6ad9157ca41a01cf1a960478e39ac49983c17f756758a25a8037e6fabc3f6d69bd1ceb28b5bad9f07637142f391faa9e72819994925de11df4868f2f6ec27fd7aba2b599e3'
    )
    rsa_keys.append((rsa_key_37, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe643203b22b4048427210bd390d45a3a62ac132c0063990067686123d5012881
    #       2e09411f27098400c841e09183400431018100a2b1cc0954c0405026420e8c7f
    rsa_key_38 = paranoid_pb2.RSAKey()
    rsa_key_38.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_38.rsa_info.n = util.Hex2Bytes(
        'e41f30330e9c3f4614b4ebfe3cc784855e0872abd9b4effc9c41feb7cb44dffcae2d7be5e41826ca4fdc1c95e2c6fe552e46dd0ddc16029940c98ae2b85ad1e8bf322de3264be9f0152cfd15b644cdf6fbf5450592e2885c0fbfb1394af32b44e07da8a51f08695ca4ef624ce04be574750e828b2970069264f76d73148a15ff'
    )
    rsa_keys.append((rsa_key_38, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xffefef7ffde6ffff7fffffbfffffffbffeffbffdffffffffffffffffffffffff
    #       fffffffff1fcffffef46fffdfdfff7fffffffffffffffffffffeefefeceffe8d
    rsa_key_39 = paranoid_pb2.RSAKey()
    rsa_key_39.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_39.rsa_info.n = util.Hex2Bytes(
        'eb5c5b07aa9aaa7030e822d57afb67717d82d8fd9bec5aaca5c90199ce0b7b1943e53666fa0f5e1e8bbbea20832d83d1c4bca7c3ec19e4ef033df03f207ec404b3470c2156349c56cee1cb509da7a1b66aa8a2a9ec5ab3e2bd9172a4af0751ffd0a262493a1071bedc86d3aeb7516e8b8b318c2a272e2bd81e3929839902a51f'
    )
    rsa_keys.append((rsa_key_39, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db6
    #       6db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66b37b6db019a4697
    rsa_key_40 = paranoid_pb2.RSAKey()
    rsa_key_40.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_40.rsa_info.n = util.Hex2Bytes(
        'd2fa7b72c87eb3b65d8ad55f88e9fc0f34f3ed2764749f9f41c04645a1126c6259c3621ead57ee116e2748a386f359be90c013f3ab36097774ba8d4ff39504490a35d2169506dceb74e765132fe179d2d126357774016517e392f3eeea3dede897585588f8e0f63a0078158d765d5fbd0b485c96be7b4c530227ff7bcbd9b411'
    )
    rsa_keys.append((rsa_key_40, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000b80000000000000000000000000000000000000000000000000000000000
    #       0000068000000000000000000000000000000000000000000000000000000251
    rsa_key_41 = paranoid_pb2.RSAKey()
    rsa_key_41.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_41.rsa_info.n = util.Hex2Bytes(
        '986eccf07e9976c173b054e535b8f0b6e4313a2c04eef7d15f6a35c8c0b0623fc3f445859dc7a64a5c3d5f56807b71ad05e837b7532703f6d9051b080f9ed02b17bf727d52c5d04573267ee072fb816c9f6b3a3b3cd52fa014edd6fdb7fb93d00718acb139ccefcadd681fc478b29e2246b8077d2ddec115634476cd41dcb1cd'
    )
    rsa_keys.append((rsa_key_41, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xccc5ebfea2f4beb8b62dfef5429f97f06af0af8d08159d21df4540a0197ffdb8
    #       386c8ebb18bd70b0f46c9615d2fcd0ea38a2cadb522cf79f2c3ab27d9564a197
    rsa_key_42 = paranoid_pb2.RSAKey()
    rsa_key_42.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_42.rsa_info.n = util.Hex2Bytes(
        'c40b6a2e2c9f8b37cf3ac2a53c4c97058dcf7a308f30e0640af14ef608d02aa04fd55813a902ce722a40ed72f951ca7f9091764949fb13c1fa40f3a97ac3c66d3eb01f3a6f5bc730bb4bcfb0b8840fd74331caff63381627b9a099b25af579f747e1f38cc225e4daead381739590570f213c803dfd11cfb0f3a772e88e0946e5'
    )
    rsa_keys.append((rsa_key_42, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xedb6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dadb6d
    #       9b6f6db66da6b6fbf6cb9b7ddb656d9e6d36a7dbb673ba6ddb6f6db66df6b5e5
    rsa_key_43 = paranoid_pb2.RSAKey()
    rsa_key_43.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_43.rsa_info.n = util.Hex2Bytes(
        'aa7f0edd2db6c867512d51799d7c090cdca9b7654d607002c8f7756a3b520ff5355c4ab3ca3bf592235640278435d1290001add5756967aafcc07978ca29eb76e5433e35b05ec2950d7bd3ed2da909efd3592985f3f0780bf5a7fac29de0c3d02ed50eac0101f3c0bca55e9a58a87a6b77689c2c7d4e2736da4bca2c9238e47d'
    )
    rsa_keys.append((rsa_key_43, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe7fa15ab6c3d2c3d13960f598cd2bbf74a688580e5fdc70064563a10558f1dfd
    #       36d5e8aec88897c79d73ebdcbec1b5f0121175c8aae69e3a31a63f9e66e0bfc5
    rsa_key_44 = paranoid_pb2.RSAKey()
    rsa_key_44.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_44.rsa_info.n = util.Hex2Bytes(
        'a132b2172e89b9be406a0ff8bf59398f9c0b6c5f92433c605849c87f2bf20348ee97ee335d6e370ca3f431e635398ba031ff85d25112a20355f78559eaf10af39e3c56756e3b855e1b9660544ecd3306a70d0963e2971d2a9be228fcffd3c130b248b3394d74dd9fc61569e2fe685b25c6e645001eef9b891053b1b83ede06b7'
    )
    rsa_keys.append((rsa_key_44, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xffb308867fee16267feb2b1af212ffefffffe4308866fff5fffefe13ffcf869a
    #       ff4bf907ff1f9393fff0fff3fffcfff7ff3ef703ffaa8c7ffffe491affeff3b1
    rsa_key_45 = paranoid_pb2.RSAKey()
    rsa_key_45.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_45.rsa_info.n = util.Hex2Bytes(
        'a4fd4adf71664acd09318c7a3bec79d6d8065bedfc38010658c59a3e0ad4228ab81fb4e30205fa63d9f082a852d6113f1b848dc4de682690c21b52cb519fe540b2f5a1051b273f2164d52ca2b2b28e6ba0d5ef1723f5b27adf9c21837d4a83ff843650d60ccedef255af83b9b7c22df1ad6cb969f1af1d83515671ebc6a36dd7'
    )
    rsa_keys.append((rsa_key_45, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc010208a48c18021210810848421423010a4084242006309ca468d2123081084
    #       a520431000c40a425210210a084a8ce1290810cc84204a9011ac2842401022e1
    rsa_key_46 = paranoid_pb2.RSAKey()
    rsa_key_46.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_46.rsa_info.n = util.Hex2Bytes(
        'b46e2e00b7f4a6a324ec5560aeaa721a4bd15952b1b842662ae4dbdd509c6f40d9db74caa9820e270e8f6334af0f6709cbb62524228ee8b48d5fc9a789876475448b8cef6e0b00feed512f1ec2194f8a1e5453a1fb749a0eb7136567533639f2adabe15ab034f238f496e03af4b3ef95995c2924ac9f973c02ff96dccc85ca71'
    )
    rsa_keys.append((rsa_key_46, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe739729c9ce7ce73539c29cec126e7383b8e89bd2207faed08428421318c1084
    #       c410631858c68c63e31035cc8c63ce31318810c64331231818c60e63623b32a3
    rsa_key_47 = paranoid_pb2.RSAKey()
    rsa_key_47.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_47.rsa_info.n = util.Hex2Bytes(
        'a510761d8c00a0489d3743d7ddd9b1b048253ac37739fc8429845f97f9a764c543897c136d9fb3202ee0dc07ac884833425eea23f9fa09be73c2172c8e74a9a57441d5ce45ea142aa13c15bfafff3e095b82e8333db5b24e287fcb89eed7d4ecebaf6ac184cb5764f6cc49f9690249173da5443593c25d4f00032bc3215c5375'
    )
    rsa_keys.append((rsa_key_47, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfeb1b9efa29f64ed53628a10a924b5268163dd887f653a6b82edb063b6874c20
    #       39e4938018ab949a3c28cdc785fe2be58872c0c8a9ec5171e37ea6a82d5d46d7
    rsa_key_48 = paranoid_pb2.RSAKey()
    rsa_key_48.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_48.rsa_info.n = util.Hex2Bytes(
        '94a72e9009fb3bff1e8319f97036519585c325a271872381ca3af758af2aa525589af2569cc126d87191eaedede653d7f0c751455135844919d1facaade40e7f0bcd0320a086730ef2206e73dc8aa0811cd197da86afb47f56d54bd938c962b40c0aee0a1db78a48b5c7979c39eaac0b0187742f9470fd83c82e5465547b5f0d'
    )
    rsa_keys.append((rsa_key_48, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc0100000000000000000000000009000004260400c0000000000180000000000
    #       40208000000000202000010800000000000000000000000000028000000002f3
    rsa_key_49 = paranoid_pb2.RSAKey()
    rsa_key_49.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_49.rsa_info.n = util.Hex2Bytes(
        'a0470361ec59ccda9cc34ec2407e6de3fb6b6950793498d6dea1d78d1704415a3fc11c174d6a78a7c4e0a2358a958a8bc6bd9290814513e511f3ebd6b6368ac10851515f4897fa19b98d5d04c0f79c6c2d8aad8a0579e63f2f29bacdb55544bdfca7df40224554e3fe3e76fa928537ddea81aeae869bfaf0c4a0da4f1084bc07'
    )
    rsa_keys.append((rsa_key_49, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf9d5834f918b673e1f7eaae3cc5d97dd2706dd8de9c5b2fbef679b2c196933fe
    #       30f62ac3f7fcc1c593fb63a0bbb8838b8486eac959cc3949ea9182c46396fbcb
    rsa_key_50 = paranoid_pb2.RSAKey()
    rsa_key_50.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_50.rsa_info.n = util.Hex2Bytes(
        '9b6b4f2b18e83ee4c6f6111b46ad549052633a5a7f7fa712f80cab71180ffc2c0a0903a9f6a78f591d5c26d56ce578111dabc3f0218166199a51ac8eb17b2f2598c6ef5ffaa83bf3c487a9fef1726d4beb9484d354a5eeda6b68fe47c6c707c299aa01232209384df686a9d50d3dd9d004bef32f09bb03831f3e0bef9af01199'
    )
    rsa_keys.append((rsa_key_50, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xdac45d37aadacfec73b3184ef43d52d6314754abd38414dde03ade396bd809aa
    #       2811047f015c9c71f0cbb0a91028190adeacc36165b0e0e6fce64549f947e0d5
    rsa_key_51 = paranoid_pb2.RSAKey()
    rsa_key_51.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_51.rsa_info.n = util.Hex2Bytes(
        'a720aaaf96d835e5481afb53aa04d9255e15daa0490ff60fbc66f395e43d99d9ccee458277465904902548af4bd712775e3e3499b51f5635ca7bc7c497b1ec2c96b6dcdea99006ceec4dce45f422b602581cece2027c1c22d51e35e8c4191ce02d444896b04ca46cb236092465815416a80428e2ae7cfc7d2111a940eb6a05dd'
    )
    rsa_keys.append((rsa_key_51, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf49808713746a41a331625a7cb389611eaa3905984245f99e828f17f867413cf
    #       ae91230478715024db5ead44beb20fbc73a23a271d627a11747b5823f753eb03
    rsa_key_52 = paranoid_pb2.RSAKey()
    rsa_key_52.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_52.rsa_info.n = util.Hex2Bytes(
        'bce0fbdeee19e607ba867c0efea83c5dd77fb033dba6c80cb7e6a657a8dd1b915cdac344b9307dec09904c0493706b27379087d5c206470f1ff6ad23b5c5bda3ae0608c0c63b42e02f0c6fc4e3c72e07d4f1d5f7eca67039b87d6d0e8c79b49816ff63024cab462daa57324db753ea06b0688cd4f32f32300fe72b0e72cb4ba1'
    )
    rsa_keys.append((rsa_key_52, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd67a7b111c0401971f57806a2be12a174b8923fd3972ec64fe3de3ee96594a14
    #       207831d12f16f545851cad6356bb16221bee68eb2fee9427e0da0ca5f98e5861
    rsa_key_53 = paranoid_pb2.RSAKey()
    rsa_key_53.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_53.rsa_info.n = util.Hex2Bytes(
        '936c9931804f79f8877e31f2427fc5fcdc5413c133eb09a2ab740eefadc560c779c5c061b3c39e80f25b8468c0f9bc7ad6b7f5e3f3a5985073f75043970a84de350b6267c4e7c0a8a55fbfa1b65ccec5595f493647c16a69237afe507ba8134935a404cbc5c854e71764f0e424bb34ae3c2ce07920b267ff3a024156df1e958d'
    )
    rsa_keys.append((rsa_key_53, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe83071df5288c373a5bc43fb20309e25e99fd85b61a9a4e6f3f71511b98f7ec8
    #       7047fb32520d94cd7753dbe173304445ca648231f601dd19d3cd40c74190c71d
    rsa_key_54 = paranoid_pb2.RSAKey()
    rsa_key_54.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_54.rsa_info.n = util.Hex2Bytes(
        'b16deea7125c6237462f1b1c623214b63cc3c26474309b5df4682aa01fef567c9b88ac7aaa213a28b33b433b0a4a17dc7244c24d493a6cfa20782d8ff324dd9793024c51f8135f4c1d2a72b168738537120567ebe98ab2694dfa0b2e8f06864e4295657a7247d172e9d536782cda2dc5da0b6043fc569eb8235cf03f2ea725fb'
    )
    rsa_keys.append((rsa_key_54, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xed4294b5a529529c94250ad35394214a4a52a569a94a94a5e56b52948ca74a52
    #       529429524a5aa529294a9ca5e1295294d4a74a727394696a4a13a529236a968d
    rsa_key_55 = paranoid_pb2.RSAKey()
    rsa_key_55.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_55.rsa_info.n = util.Hex2Bytes(
        'a4d7c9f4ed3ddb9d8eb30a771f14c63673488a35ce33507f33db4f694cc82462163da4b2e4c97f75f5007b33b30fbc9a6ca4e7700e2e30aca1b44bc23896b1c6558c5ebdbb05d5ee6af9f4eaac341036376c8448169262305afd59c88b60bab38d1852ebb81981a5a385c0996d50784b070cddedfa063716b5b70a8fa5442165'
    )
    rsa_keys.append((rsa_key_55, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd621eb6e5ab7992c6efba5f34a7b7b28026fc93138998c113831dbaaaca1a157
    #       38a7b7a9d191bcd77955b92b75263ad9f6bbd4ce0b4edca1efd5f3e24b3a2889
    rsa_key_56 = paranoid_pb2.RSAKey()
    rsa_key_56.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_56.rsa_info.n = util.Hex2Bytes(
        '93fb1be0beb7b7a366dbc8ff15ec571dae8f2267c3311395fbfb1808ba8355f3fb4fe6c41cccf791b30f47572c76d10ce6ff597e3111709465169279582375cbbde9cac44f4c3aa255ce3790a67072f187ec0654c3ac8b68f089fbaeab78058e112718aaf4191432a1cdf2ee7ff6cb3f40c2f1ed5bb34ef1bc8b2d534fa6161f'
    )
    rsa_keys.append((rsa_key_56, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd9a43ff058df6b8d55085028eac413a7439e1dc89e5d6e8b5de09e7bc7483d76
    #       2788ff9e36527ff67c39360cfc0d2a75986b7fb35614027cffb932ee1112ee8d
    rsa_key_57 = paranoid_pb2.RSAKey()
    rsa_key_57.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_57.rsa_info.n = util.Hex2Bytes(
        'c4cbd997ff1f2298d30adcbb1616fcb940c66ee87e2f642d6e308c32c828c6aff15f7fa4a31fe79a10381f176f8635f801ee89ec41c49209ed81f70d82d92bd84dfe60d873c3666891f02dcbe856177f38929541c7fdce0b2d9a4058d821180d9d2a0b3d5213aadf2aee67a37442a685eeee63dca5993ab260cbad136e9fc9a9'
    )
    rsa_keys.append((rsa_key_57, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe492924992494924492524922492924992494924492424922492924992494924
    #       492424922492924992494925492424922492924992494925492524922492938f
    rsa_key_58 = paranoid_pb2.RSAKey()
    rsa_key_58.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_58.rsa_info.n = util.Hex2Bytes(
        'c15b20e727f4b16149eca667cdcc03e1ade5a8d65f496208a284e1d34ed82634b45230226b646a073e61ec581580318099d8111c0a743be10c54fb7ac908b5c41c46fb1e3fb305f5ae2458a2715e911bfe8615c825c4f195e12340dfd60694316633af872243ede400b87ceedca029539766bc5906c4329e1f474957b8614a67'
    )
    rsa_keys.append((rsa_key_58, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf9cf9b29d767edb655b2f6bf964bce697f652fb669b322eb63dffb6e7a6c69bb
    #       798396d284d85169883d42a6ec96b292761d6dcd7ab595b2ad0a9a5d7e97fe41
    rsa_key_59 = paranoid_pb2.RSAKey()
    rsa_key_59.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_59.rsa_info.n = util.Hex2Bytes(
        'f9c3476003c3362a2c3b5b4d1d030bccafee8cc6fb3b6d535d885e4eb7a375a5b22a451852ec52aaf5adf80d6a329c563428f561d0a3a043a112fbbac89d4e6a211b1831d245f62780febc298528a82fbfb7d22911a0eadf91cd11963a52e59ad8518035866baaa9e23baeee23b5a87b6adf3b5dd82d2b05b8273a0922f99e6b'
    )
    rsa_keys.append((rsa_key_59, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfffefffefffffffffffefffefffefffefffffffefffffffefffefffeffffffff
    #       fffefffefffefffefffefffeffffffff000000000000000000000000000000bd
    rsa_key_60 = paranoid_pb2.RSAKey()
    rsa_key_60.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_60.rsa_info.n = util.Hex2Bytes(
        '81a4133770fe56e26c3fd0812abe251415a8458cf45534bf939dba335423e14f9dc97f9b75093dac832028ae179415bdca1560867e839244de9431a243c543008d7f50ba950ec361b14ed8a3d7bad5897f6345da2383a88f9918971c3f429f9fc0c7ee12fe6ad03876471a1f3f53bee32a5d3e3584c5d5fa7b39f8c8ae574f5f'
    )
    rsa_keys.append((rsa_key_60, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf9ce9ce7e738738c9ce7ce73739cb9cece73e738398e9ce7e719739c9ce7ce73
    #       73dc39cece73e53839ce9ce7e7b9739c9ce7ce73739c39cece73e73839ce9d63
    rsa_key_61 = paranoid_pb2.RSAKey()
    rsa_key_61.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_61.rsa_info.n = util.Hex2Bytes(
        '83054ecfc646b7cc418ba7dcb489ab7d1674fc04ed88359ed07ae558d85ca42f39a7a2eac5133a9b6dfe9508d84f1ad72a26ad37859ad42732fe8007b947e941ac154bc542db0f06059bdcbf0530f9e059a28f67eb0288ed0c008ae48014776776a02ea95e94ba0a8736164649285d97b0532a03319500afa5fbfe222eae7271'
    )
    rsa_keys.append((rsa_key_61, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd53bd2f169ab7fb38abb7f05cb1550e200914674b65ce176001ffeb29dbd1e90
    #       c21a77e28c6dbfd6e6a782baaba532e2a98eff9ed8e924986af702c48504d0d1
    rsa_key_62 = paranoid_pb2.RSAKey()
    rsa_key_62.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_62.rsa_info.n = util.Hex2Bytes(
        'ad85e5689f9b07202d890a00f0e20d5c776ec1b62479a62d46e05dac2a02055c5273186ab39b8fcace0b081badcc1fbef9790200064db9e6ad2c5d7cc3f0834c9e8f7ff30a329b04858b57e9632e1524b1d8b27a7b85d55b5bb11385f978fd4f3c81692a32069a22e8a8faf521dc10b629fa62f66fb9e08ecf8cb0d24d7ccddb'
    )
    rsa_keys.append((rsa_key_62, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc36e8f2addb602d9d18b2b040bc7a00bc7046b2030c2d3e91c4c161ed562a31d
    #       2d056afc759042a46c28e218e25e7c7882fb1cb2d66039ed961dace5ea69c5d7
    rsa_key_63 = paranoid_pb2.RSAKey()
    rsa_key_63.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_63.rsa_info.n = util.Hex2Bytes(
        '876b4868c1b4129bfaa062b57a8ce297f23e081c4f239179ec0bc030f1c215b05937b81f62a0b79c91abf1093a143b96d06e9b737782999f0908e99e710ad35ae7f5bb8c97f974bafc7cd3046e7cdf55055db7066fedf060c630783656892a120776bf1f8b5985736c6572df29708b4f8f8b48f6452c1a18f3f0f79572d05383'
    )
    rsa_keys.append((rsa_key_63, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xed15cb0fde1567b278ef2422ee01ed658173594b0bcb71594a18df455fc75ca7
    #       c5b529bb6b9ec229be6ba977773eca917ac08a1e9f557adf079ab8bceb2bc01b
    rsa_key_64 = paranoid_pb2.RSAKey()
    rsa_key_64.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_64.rsa_info.n = util.Hex2Bytes(
        '80aa0216db6c8312a11bb0beabcf89206a9bb97e19bbb36ab5f9104a221e6d763428252473b61d836f5763c2dede2caf74a0aa5218624a4b4f79ea8583674176ce60dee41a59198a597469c097aa1385dd3691e5c4ec9107135c3af049d9a0a7c4eeaa4f9f6b1efd62e3e2b99d92ccbe238c69beb0a9f352666f6a80ebae34f1'
    )
    rsa_keys.append((rsa_key_64, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd00b0dd78fd35c88db31806803799deab89b8b36c39dc0321574801fb936f90e
    #       2920f3dd65400ddc00be90ebcefdd62d5c5c062c200bdb04aa6a5acf697e2a0d
    rsa_key_65 = paranoid_pb2.RSAKey()
    rsa_key_65.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_65.rsa_info.n = util.Hex2Bytes(
        '81b39c02589814b4398f0939505ef9a9918546591971f31a2e92f38f2780d88ba9dc585a33f4deb94d5742f12c701fcb58cc9d24beeff4b92adb3bea17255386ac73350f887ff08e1a14e5b5d99068dbc398785c43c61bfefd057893a6cc94b25af7e7f53d978e6ea55805f9f3a334a5178dc5442bf5a908630d8d81271a3983'
    )
    rsa_keys.append((rsa_key_65, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd0054c94020831e800450e05811840282088a906825002d9a0c340938dc0b206
    #       28072f800334102c08010309c020800710200c04a604083700aa440088411987
    rsa_key_66 = paranoid_pb2.RSAKey()
    rsa_key_66.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_66.rsa_info.n = util.Hex2Bytes(
        '8243a54521f411b7ad8890d981086cbc94c82bed75c3820dd6719fbb52a7da22e954ced10a4a5519be3d61181df0ab0ab87ca4f02617630f1e247550865ce7b18362140e147a940d8727653b6c733d49a3a8b9d8da8c7c20740e0e6a443825ea8ac16b666e0dc9928ac4982af35b4d7a1e364781c17cabfab394af9526d8eac1'
    )
    rsa_keys.append((rsa_key_66, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc7592d7dc9ee1031dcd3d30f43028858305ac46ac981cafa164a8000a9c6eeb6
    #       98181505242ac9dfee9e51c92460b987dbc8161def71863d35ac18fa1235a903
    rsa_key_67 = paranoid_pb2.RSAKey()
    rsa_key_67.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_67.rsa_info.n = util.Hex2Bytes(
        '8c5cc2a893ae7ed62e3d026897ca22452f37ce8a11cb01bdb95e3ec818439e76399f44b0bfc03f1c626b23cfb15074c06f658dad2e1489811fd70c7a4d42b93dc4b378bce6b356fbad477401bc90e7046c4afa55c888db3541ab87df165cdefa9a5169bd010243ed9022358257d98ccd9298d09cc9ec21abdbd3a9396831ad99'
    )
    rsa_keys.append((rsa_key_67, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfffbfcf7f7ffdf3dfffef5ffffffbfffff9ffffffffdff7dffffff9ffffffef7
    #       dffffffffbfffdfffeffbffffffffffffff77fffdfffffffffff1fffffffff35
    rsa_key_68 = paranoid_pb2.RSAKey()
    rsa_key_68.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_68.rsa_info.n = util.Hex2Bytes(
        '852fc83c26c574e1701ccb8a0b5bc0218bf092a279c951046574458de5fb0ff5aaedcb7061db8bb4eba8cb42ba8e19fb2400389f8d7367619f27221303d846b7390a68088392691f183e050e1892641ca55fe89aa09e5878dc15537d86294eb7acebdf2859808c5f68406e6d74ed74c67d62b662a2668ece051d59fd5f056191'
    )
    rsa_keys.append((rsa_key_68, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf5eb05d73ad4df3cdaf4fd2eaf41e8e405952b7a327479147fffa33eb829039e
    #       77ff116f9e4958a3f604743ed2c55ba67b47631842905dbc2f12c66fb6c4e40f
    rsa_key_69 = paranoid_pb2.RSAKey()
    rsa_key_69.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_69.rsa_info.n = util.Hex2Bytes(
        'a5b4263fe957dfb17a18a02e2ecb0d22191b5788f5c67cae389ff2b4596968364af020bdf3c9aacb24e16f036206d39bdb213514b36c04ba3017ff39e05565734df3913e6317e24ee53c52aa2f6fb096979d85b6e29e948d70fbca1c75e3b6a84f5760e61920021cfe7a70d4798e8bbf68bdbf430a573e590eda08e30fd66b8f'
    )
    rsa_keys.append((rsa_key_69, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc3ff4d30474f40df0e7ffffdfa92ffff11d59d35d214ffff85c357c5c85ed72a
    #       caf1fb7d43f76d85ee6b4fb3ffdd60d5095ef1f290df4ff888e7e37efe4f9e8f
    rsa_key_70 = paranoid_pb2.RSAKey()
    rsa_key_70.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_70.rsa_info.n = util.Hex2Bytes(
        'b4689d1f832bb7a890a1dc26cb4c7969c8c7012ff623db7d51cb43f7ce006a3f38f1b4d89f2042edc9188f17c110a2393b8ed03284f12d8aacd44a71661f756e9801f1a488bc2e89a111ff08ecf50cf35bb3480ea5ecc013125c9d40ba8b58f4d18a1f428ff8d979382878b10eb1dc1c9184127cc98f738501d3981ec234a8af'
    )
    rsa_keys.append((rsa_key_70, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcc7b18295347824ccb395bed351993c598c7cf7f4e32dcb9ab7a5d7e0baa7626
    #       d1b8dc651b34f5e4f5d3f2530b52fb9bd10e75259b36d774f059141bf9ede911
    rsa_key_71 = paranoid_pb2.RSAKey()
    rsa_key_71.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_71.rsa_info.n = util.Hex2Bytes(
        'a2f7b584f916b76a9d8db2e8091e2901461ed605a84634368598bd2cabde709f618a101df8e280f25cdbeca5604f3151c3098bb7cb70f42baf7031086dbe76a0fe00c1bb9ba07f6453b30a92aecd22a2d879cc3380336777a71a9bc5251de4ffeef68cfb2800f8bf688f62e76c7a170d561b1a50ea916baa80769b1c37fec369'
    )
    rsa_keys.append((rsa_key_71, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe675a7059b1e6df20198f8a75a0ab28123fff79a67f59c7049fd37d48128f3b3
    #       a9b69475b902f4bc854ca1deecbce73cdab89b17ae3c6401a9d43594775a926b
    rsa_key_72 = paranoid_pb2.RSAKey()
    rsa_key_72.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_72.rsa_info.n = util.Hex2Bytes(
        '9f519f91945615d4ad07f764c4494572581f32a203e0c4c6cbb2b747a33bbe8b2027e6fbc17b75f713e1ae87f8a7399b0d151847d38afaff9abdc0d8427cf89d66a87c2022e367b14d81ef6fe41a74cc4573d93fb99ab5b5ddc85750fdda00853b4c439fc485bc14068e8f30cbdbd3160ea3171ca50f50fe2207dc0531ce45a1'
    )
    rsa_keys.append((rsa_key_72, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xef7b77bd3defdef7f7b47bdedef76f7b7bdebdefef7bf7bdbdee7ef7b73d7b9e
    #       def7ef7b7b9e3deeef7bf7b9bdefd6ffffb97bdedef7ef7b7b9ebdafef3bf845
    rsa_key_73 = paranoid_pb2.RSAKey()
    rsa_key_73.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_73.rsa_info.n = util.Hex2Bytes(
        '9eb43b613cb3b8f02ef77cec8504e41dced24f1e837771bcba25d854cebab346eb76fb30fc0a2b476cd96d9301380cfb705859caffb40600a8efc9600c838795fae3457fd9786e17933017fdcdd8ab8a11ef9bacf9a4046efe74fe413991d54fd84bf480c563113b4b54165c96cb96ca5e7e1706bd312b27a2445c33a1a0302d'
    )
    rsa_keys.append((rsa_key_73, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfd23b110962000d598488c43407369898cd0086df780826dcfa14784f3838887
    #       4362851b7711dc13564441351335c71fbd7c564d5d5008f5de20d43f2476d715
    rsa_key_74 = paranoid_pb2.RSAKey()
    rsa_key_74.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_74.rsa_info.n = util.Hex2Bytes(
        'a9ec2ba7e1469b9f7b960547fba6f495dc6892b720612d36d9c88e7957aa7af764e32c8c7b60f7c5bcbde7e57764d0a990cde401d5f23c156033bf040c9c36194702700d2b5ca5cd1af8564b1ce0f809bd11748fb8204dfb89dd2dd82f2d431f9b569c405828086b5b91518245b8d9381a714f607337dacbfa7322b8296c5013'
    )
    rsa_keys.append((rsa_key_74, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe918f1658790911a71a9ae1895cfe56dbed767816e337e2f950462affb3280d8
    #       a8dcb1240620ec8f1d19c3750afcfe295c58cca117b36632414cd9e114fdb097
    rsa_key_75 = paranoid_pb2.RSAKey()
    rsa_key_75.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_75.rsa_info.n = util.Hex2Bytes(
        'a95cd44cf896357076f5779ff58805a07afe563ccbe5d5f49ccfb102bd1e913d75a9b26ca1261072446a9f24251c81cdb5856fde380e06f520b2fc37b3ebfa79a765a08480ec6eb95c0f5efdacea292f791a759ec30d4cfe1b996690e653176778c0488b42954c31b0bd8b06df6454066def665e569c89204ad5393a324afba3'
    )
    rsa_keys.append((rsa_key_75, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xffffaa55ffffffffff3cd9fe3ffff676fffffffffffe00000000000000000000
    #       000000000000000000000000000000000000000000000000000000000000009d
    rsa_key_76 = paranoid_pb2.RSAKey()
    rsa_key_76.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_76.rsa_info.n = util.Hex2Bytes(
        'ae75bfe5414961ba4abf0fe0c690b204e7819afbb574e68a8e1febbcbe9d34a033127e85b371f88c71e680ad833b057ca64e444733855dfaecfa48078ca77b3cac97c91d7f0a9402e013b4967b5550b74d4081c8f64a136447fbe88106150403ad3152f788dd73d421f107a625ebc395fa1d961668f9e4540a1312b2f2576d69'
    )
    rsa_keys.append((rsa_key_76, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc02100004804100000100010008001ce2064004242c812186250154c00000088
    #       ba78008a43a9713bc0abb849220e8362cc838b53cf88fcdbdd7fca83c8df8145
    rsa_key_77 = paranoid_pb2.RSAKey()
    rsa_key_77.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_77.rsa_info.n = util.Hex2Bytes(
        '90f7a3f56dfb15bf67ada779b561b6e1c35138bcc8b9f90e5ca0946e23ef734667e045699984b3f3992061fe431b49a55c0aef020d0994a4da2996eac2581e0d402f1947941e519ce6a3c745559fe81277888800ee8d57a0fad42d450ae1347b7bb2ac9b0c77c99350a48102816eece821c38f13be422d2d457b186a52a5af55'
    )
    rsa_keys.append((rsa_key_77, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6
    #       c631631818c68c636318318c8c63c631318c18c6c631631818c68c63631831d3
    rsa_key_78 = paranoid_pb2.RSAKey()
    rsa_key_78.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_78.rsa_info.n = util.Hex2Bytes(
        'a38a4b2454a318b5439410bf241fe66c9c4cce3317c95da9f4152d94dcc512437fa62bf7a0f34c53179b2a92fcde476927cb2dd2b56ce5c71957a5a25ef9ac65ced9667dfb62c969cc5db4f897183f37f4991addf0839ba8203f7e667d177d81b5129be686685ba012e77613f0207ab861a4bdeb0f47362312ff82ebae6e5655'
    )
    rsa_keys.append((rsa_key_78, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd501973162d4017f4e3b3c9d6803d4cc46a1d457c91feb5b6c2ae77423ba41c9
    #       cfbd5f4b9235667874507e9cafb4123e1992d1c5ae75ee295087011a822a6ccf
    rsa_key_79 = paranoid_pb2.RSAKey()
    rsa_key_79.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_79.rsa_info.n = util.Hex2Bytes(
        '995bd2e7d7a15b64fbb9e9afc9ddd292cb671f4ad5cfeac3ae12fe33224033beeda0be35ee6fdbf0870c14b3d05c6b353797d34ebbdbaef1c8ec1ec5f00edf81460a1c6702787bfe031596b9469d8f34ace662bccd0563872a6e98cb4d27ef0eb810ab67b79b177ff3cef17defbdfd9b53e32c59de5949f54ddc56aa735ce54d'
    )
    rsa_keys.append((rsa_key_79, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe28ecce1de7a0326423076465160c1b03f8e721181e046ef4860ae94d7802a08
    #       2f9f6007c0011f20056de200677aa7d8a47118e6692ee4b3f862c24e04b543b5
    rsa_key_80 = paranoid_pb2.RSAKey()
    rsa_key_80.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_80.rsa_info.n = util.Hex2Bytes(
        'af7e3e1917e18bc024567c09264f7f0a3ce2632d607b721c804a016ec4f39d64fe8d4af13eda5311bd84c9a59f3fa280173cc2b2989fb51a528ee0f4eeb6e395044867dd63d9ef9ce44fd6188516b83bad36a6f6b5ee1fd1fc91d76be44016eda05e534202eb26eb54a102533c9f89c0379a2d8e6133f498414eaa1608ca8a59'
    )
    rsa_keys.append((rsa_key_80, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xda2f36d74bc2dc29de4de92f4b37b03942173e15a2dfb67e8f09e790ed1656af
    #       5a8aadef14b696426f1e929699da0ee3ad9f21a9f66ede57d945fc165b27d217
    rsa_key_81 = paranoid_pb2.RSAKey()
    rsa_key_81.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_81.rsa_info.n = util.Hex2Bytes(
        'c3921bd82d51b4d8f23d87bcd227431ad4dd77115650f96245a4e2fde31bd0e1f4de8cd652906be79a6cfa8e2c0895c2bb8c4158674926f08786772cc4a5d3e742c2bec3d6175f4811000b9a5b6d1690c89b72012b8279da6d0836cd559fe02d44732957a27018b8ce3da0e914c9e0bd563a067e54a940f15ed61affbd68300d'
    )
    rsa_keys.append((rsa_key_81, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd28550a3a8520a1c850aa14250a114ba0a144285a14228501428850a428550e1
    #       28400a14850aa14250a114080a144285a14228511428852a4685d0a128500a2d
    rsa_key_82 = paranoid_pb2.RSAKey()
    rsa_key_82.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_82.rsa_info.n = util.Hex2Bytes(
        'c3ddc3ff92730963f799f692ad6b4446baae84d55f7bb570814df8d7e41ae5eb657759072a88b76ddf44da103eee9b440f9fa37f17ab242ca4957ef4ce0a4d2a5c1d1ac1f4bf655cae2c6aeea9e0ba094405546bb77bab21bbc81fc7bd48429ce1c0cc80992bad0918703b7bcc3897c6f17be42ebc0e57f61061bedf357c1e01'
    )
    rsa_keys.append((rsa_key_82, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe79082499b094b2459266493608a9249b2410d3409242692a490824d93494125
    #       4935265a341086119449d824691524922697926bb24949044027108a8c939a5d
    rsa_key_83 = paranoid_pb2.RSAKey()
    rsa_key_83.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_83.rsa_info.n = util.Hex2Bytes(
        'c2a7bfdd6a9243a872dd5ed1333dcfbf5a76962f4a885446f7c3ee199b747e00be5bb0e44444aef5fd216af9d99e36296eaee0752315ae5aaaa403d517a794e344dd618d043b6251742516e440374f7eec82cd804ee99364afeee5945725fec5f02e65539bb084b7a4a16db8aeac9ac47dd9844e30174c5253e5985a7d44e603'
    )
    rsa_keys.append((rsa_key_83, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xedfc373f783ffbfff7fefed3fffafffefffd5fffffdefff5ffdffff3ff5ffffe
    #       fefd3fef7fbf5dfff613bb59f9fb5f5bd52aefd78ebddfe6edeeffe3f3fb3df5
    rsa_key_84 = paranoid_pb2.RSAKey()
    rsa_key_84.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_84.rsa_info.n = util.Hex2Bytes(
        'ea10dbbda938e9867a71bb0afa87e5c88507aa6f75d8e88df49a78ecb07c7e7f91e094504df8efac2cf2afe22a854930392df5ec44544447eaed8645bb9ee608468e4359b47cedccf77908ee25da65668872e7b49c9957fe869e01bb299b55a1748cf5f493250fa717681cfbc0fd882f493cab92769d020db4c4ce9687070bcb'
    )
    rsa_keys.append((rsa_key_84, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfff71fb6fbfffefffffffeeffffeefffef7fffebfffeffffffffefff9fffffcb
    #       fdbff0faffffdfff7f7edffee7adfffafffbfb7effffdffde7fadfdef63e806b
    rsa_key_85 = paranoid_pb2.RSAKey()
    rsa_key_85.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_85.rsa_info.n = util.Hex2Bytes(
        'de90a6e6b7c3d7604b66ab145afb67afef5212604bd0ab01ec71bf0b6607ce333fb3ee8958890351adaa93d89235ca1c7545b9d6eafe2caf5057af18f5c494baa0b05c369d6a1c06834e47b8872eaee386ae5bafd48d36a248407e3aaf5f2df6ae4ea74f0dafb35b6a329fdbfbc447845da6c099543d02b095f2d20c088412d3'
    )
    rsa_keys.append((rsa_key_85, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcaf67d473c10f4e73d6678d4a27e4eb04a743925d12c31f97efa510ca68558b2
    #       c56d839acecbe75e935f86cec7dae7c95aa0b93065a3aa924594fdfb9f521535
    rsa_key_86 = paranoid_pb2.RSAKey()
    rsa_key_86.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_86.rsa_info.n = util.Hex2Bytes(
        'b2b27088d8d8cb8ae6efd50474d6a9ba8c150687c53e8d680b61698a4d59e5eaeb303bd916ccd2963829b26917d4d1102fb0942b343ecc1b64cbd4e597746984801cc7fc9f27c63237a0f3fa87b6e52400e81cf46dff58a31ad64bcd0374a685ef1c9a101f8f2b2ff2a81c2871f6ace4a2c7439d58428b03e9d4a990ce6331dd'
    )
    rsa_keys.append((rsa_key_86, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf6b43e3bd52841756d1a27f22a8590a8a1c43c1c36b95cc72d0102f26b6da1b2
    #       38236856f7c6e6faa83cc70e84f2db44088487fd94a175f22a0d990cc1afea6b
    rsa_key_87 = paranoid_pb2.RSAKey()
    rsa_key_87.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_87.rsa_info.n = util.Hex2Bytes(
        'be2edc5a162c792006939a2b5496773321fb0fa50879a1cbaaed7775cf7f0d9ff20b755e2f95565538c6d7d16a832b0067950586fd0e3e327e0932e0ca718b373c0174a7c1f5e3ee6363b4fd7bdaf579456af417ac014f4b44bb351043a9fa793c813f1e3a974a66181fa9ac63b6f35b022e04068d003da6b74df2e290e993c7'
    )
    rsa_keys.append((rsa_key_87, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd2a20d1b986de2152b9d93cf60bf98f68e9f9e050feb9820b006e5dc581f17a8
    #       2f35a78d23fb34fab3962ae95bcf3a1e442eb5b1d72cd6956fa599483eee38c1
    rsa_key_88 = paranoid_pb2.RSAKey()
    rsa_key_88.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_88.rsa_info.n = util.Hex2Bytes(
        '8fd6bf462452eb6e6316800c0f9a392e86a6cafa507f91a2b3e5c7467e59eb0e896eca2df7bb108409f8038fb257feaa797bdf1da120a9d636eda1319d70da719c893b72fcddb958a000e59eb7fdaa7fc77c241eddccb4047f64e94ee5b2c1f58961f3deb6fb307042c0eaeb390e78a6b56ca974ee5442e052fb06281c38a449'
    )
    rsa_keys.append((rsa_key_88, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe52e529494a54a535294294a4a51a509294a96a5a529529494a54a52529d29ea
    #       4a52a522298a94a5a522529494a44a525294294a4842a52e294af4a5a52f554b
    rsa_key_89 = paranoid_pb2.RSAKey()
    rsa_key_89.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_89.rsa_info.n = util.Hex2Bytes(
        'a73cc8bb262bc511e84bf39c88e4c8e50445c5a170db41c5af4b3d03b566074e7bf4bce9ad3bd8d512adc9ab2624ceac2387c28eb03d27d8f92faea07146c873d36375042754d7c37dac3245cf5cd558dec352b46a7907eae808607623f38c27bd12b36592400d10ddd4b794773b94a8b22abf589f8247f29eaac16f462e535f'
    )
    rsa_keys.append((rsa_key_89, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc942c4644b1169461581e0713ba400570237a55c9ae69e3fe58d189aa751d218
    #       208421934f2132a888e796bc1f0914a8c9b4f116358cca22c69c35596bd961e5
    rsa_key_90 = paranoid_pb2.RSAKey()
    rsa_key_90.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_90.rsa_info.n = util.Hex2Bytes(
        '946c941c246237d36b5a27e8fd4ae308bea91785c599860c3c3b97ac7888a2beb2a4e872729997e10749e63dd914d68920b7b8f53e71dd601eb62aaa945268608d6537999b55b6ae63bb01046e779f642b729208e86a119aa0b069e9ea3894af2d3d848760e2b9026f0e00c2e2d816254133be0d17d23b57bde20ba55f688fb3'
    )
    rsa_keys.append((rsa_key_90, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xed7f7e78afc7d3735fc1dfb0d13887cddcd715c9fe530530e0efceaa4bcaffba
    #       ebac9e601623db36fffef47fffffefffffff00000000000000000000000003ed
    rsa_key_91 = paranoid_pb2.RSAKey()
    rsa_key_91.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_91.rsa_info.n = util.Hex2Bytes(
        '9b93e3b26ec471d213d72b4834f3d16fe253d73dd2bdef92f58b1fad09ad053c27b4892b450225f1a8b62800887d67d269c84095df18b0fe0118ce07de5e0b7e759cfdcfddb7372d54bcce132dca5a36008556bcd19ccde0b7511de54f72bddcbcf7b09d685b19694624fb758e4176c62dce8683b8940f12a09713cfe508cb47'
    )
    rsa_keys.append((rsa_key_91, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf6db9b6dda6d29b61dfe73dbba5bdb6ddead69beedf6a6dbf7dadb6ddf6c6cb6
    #       6db6f6d3b6db9b64997c6dbe6cb4364b96dbdb6ddb6c67be6da4b7cbaedadf35
    rsa_key_92 = paranoid_pb2.RSAKey()
    rsa_key_92.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_92.rsa_info.n = util.Hex2Bytes(
        '9346c23876b3036eb074f99ef811188b2a0a91c08136cf4835573600b386d4f6f85051977e8de4df47d46d2df854483568cba2a121fda17b28112324b803ce792b5ef265ceb666b8c442d77306e44f6236abc3361ea419e64bd1066825cbed5ea5ec4cb548487214ff18470bb7ba034be1dee54fbf58258dc8e0bf50388b9b85'
    )
    rsa_keys.append((rsa_key_92, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc080a10000000000000000000000000000000000000000000030080008800000
    #       02608020010120004408001004202080000800000050000000100000000900e1
    rsa_key_93 = paranoid_pb2.RSAKey()
    rsa_key_93.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_93.rsa_info.n = util.Hex2Bytes(
        '85474e968329681bd31be3ed85623d1a2966ece7fb4e6a5b627b1b029df3678bfabe1394f111ded74eb770ec204d9339581361bf847aadbaf099ff23c72e1c786c77dded52fbf32d7d5261c63401bf7238e3a9662f9eebaa8c005e0fa33635a82c5190b5b04e4a61d1c79592a67328b49e5e38112b28c921b6dc16902e248f93'
    )
    rsa_keys.append((rsa_key_93, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe5335f76a97c5e29d4557170cd9ef3ed53efc819fda87a566a5efe247ef102b8
    #       5c7ad90c484ade030c7ebc23455e0dcbca2cec6afdf0e8c978cb6fbed5733fa5
    rsa_key_94 = paranoid_pb2.RSAKey()
    rsa_key_94.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_94.rsa_info.n = util.Hex2Bytes(
        'b40365d52212675778b3813d2e63c6aab4ee6a88e100ff344b0a0ef05762d3e46041f3edad4ced3441863f5093cd621115ce6bc6cbfeb83e0017e4ad633b11b98263c8d386e2654a78a93b679b8d1e6d499e4c3b734f9444241e2c7095a13404802f1810147dcced0083f9eb9f560ca7af13c189747221297d0bc9675edde45f'
    )
    rsa_keys.append((rsa_key_94, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000000000000000000000000000000000000000000000000000000400000
    #       0000000000000000000000000000000400000000000000000000000000000165
    rsa_key_95 = paranoid_pb2.RSAKey()
    rsa_key_95.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_95.rsa_info.n = util.Hex2Bytes(
        '83508bac2bfe6f4f49be0db4841f2871db9495fcd099ac74bb40462b8346df00ea887df6811bf83fd2924d7ef5acf80ad6bb6c42db635e3b8654eb415bb9d64517fe636ae40aea2af0fd84ec57338ca2ada221fbf23ab0d09174566f8c294e434795bd8803b07fe581e2a3ae601b4e8f09ca4cb8a2e4e394dbf0b8f185deb771'
    )
    rsa_keys.append((rsa_key_95, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc924249324929249b2cf49244924649264921a4892494936593320b93f9292e9
    #       92497d1449242492229293499249492449262493248e96fff3c9104432f4cdbb
    rsa_key_96 = paranoid_pb2.RSAKey()
    rsa_key_96.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_96.rsa_info.n = util.Hex2Bytes(
        '9a6bfaa9f7192b4161716ddbd36e9c5dfb94e117e2637ddb1dc40f031b163c1f907c88a759a991c27cfe015bfaaadaff017d15397b3580f4628acbbc213da6af3ff1941d79e88e1bfba9a8e4229794b9c6da4eb2c53c9b25add99c97b3e172f67fa4c9b0ef4942cc46e77691f33828bbffa682ad704189193001f555c4dc6c9d'
    )
    rsa_keys.append((rsa_key_96, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc924249224929249924949244924249224929249924949244924249224929249
    #       9249492449242492249292499249492449242492249292499249492449342b29
    rsa_key_97 = paranoid_pb2.RSAKey()
    rsa_key_97.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_97.rsa_info.n = util.Hex2Bytes(
        'b4af336dc49a2e11d6c4c8ee34f80734b6b7f9cd14749f27147d1c65de6c8003c76d54da9c910fd21551b8213f45fc8058dd2b7ab8618ea0c7cee34020b44de7a36ec7ba054f3b5d58b6bbbb093ff9970c1c6bcd43dc8bb7d93e338371b60b143e30ec7bd4adefc14ef6ad337d9e9d7e80a7895dd5ca0e33faa79b8c85ede7b7'
    )
    rsa_keys.append((rsa_key_97, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000000000000000000000000000000000000000000000000000000000000
    #       0000000000000000000000000000000000000000000000000000000100000177
    rsa_key_98 = paranoid_pb2.RSAKey()
    rsa_key_98.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_98.rsa_info.n = util.Hex2Bytes(
        'a8adfd0755bbf326b006e898e6a919df92d019bb536d4b0efc46d39a82a2190634b464ff3d2cc66720ea1bc583fdda3217b102f027b78c5d6dedd2114c7d0e22fb77768708757306565fc2774606aaf9d859509d972a5e12bdd815cf6adebc1dec90f5b7a756511e4e90b608960f83167aae7834cfbb3e90994509271f24d5c3'
    )
    rsa_keys.append((rsa_key_98, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000000410024000050800080210000490000001000000020800000000010210
    #       05180000000000000000210080600040082000400000183001000000200020f1
    rsa_key_99 = paranoid_pb2.RSAKey()
    rsa_key_99.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_99.rsa_info.n = util.Hex2Bytes(
        'b1e95f98c5775fbb639348440b879d94e9d0529ba5e34b98aee8bd6e5632267619ca14b615c534c32f7d3a5ac3a1f93f0f7b4fe5101b3045884949cca19dd553d752278fd4a0e85e1e7c37f534323277fc7bc784fc5b5e0e9cbcb7680fda98450d330e8d7350aa0d19949b0ca1b7ca9818b01f74504cc4c9daaf24c77a145e63'
    )
    rsa_keys.append((rsa_key_99, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcad0ca7166b2aaf6c82b0eadfeb13409da7c2679517d4fd96f89719659133e04
    #       92d209da600753dc5c2570ce128cf985332f944143204b706bf6e990c0e43dcb
    rsa_key_100 = paranoid_pb2.RSAKey()
    rsa_key_100.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_100.rsa_info.n = util.Hex2Bytes(
        '8af5c5a5e456be4704c2be1fc2051a20e0c4a0817bf4e27f6beab41953b34a6abf426991af99e884d3bae8102dfc314d72b1a0d73a639e2e9c56e33d8ddadfa1ce639e976f428a634324fb41543d231714cdd20503000651aaa97c6f40579d61f399834b62b711dcc423dad96ac87d73542e579afc8ad72e4c5084572466d695'
    )
    rsa_keys.append((rsa_key_100, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe739739c9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39ce
    #       ce73e73939ce9ce7e739739c9ce7ce73739c39cece73e73939ce9ce7e73973df
    rsa_key_101 = paranoid_pb2.RSAKey()
    rsa_key_101.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_101.rsa_info.n = util.Hex2Bytes(
        'ca51209b348922af9206e7fc1cea0ecb30d95b148655b83c82dde9b2dbd5451d548f307e89da76539c5c7979228404444db20ce2d657b8de914c2b5080c10156d0ab946329e6a1981cfb9131c0c31ea6b0065f3a2be852fd402bf180c10572da6d736850efb5a6ecfe4da04fb0da890dbee0cb1260e953603ab9519ef3a16f0f'
    )
    rsa_keys.append((rsa_key_101, True))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xe0929249924949244924249a249292499249492449242493249292499a494924
    #       493424922492924992494924492424922492b24992494924492424922482926f
    rsa_key_102 = paranoid_pb2.RSAKey()
    rsa_key_102.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_102.rsa_info.n = util.Hex2Bytes(
        '802173b4f58b537ea2a964cba487268da1bdf3535bcbcd240153c5e4d8309746c280821a5fc8a3658dd595acf79bed7f5a664489267df8c66845bfc89151c471e922a6f3364be3dee66e3a96a9275453fb3dd6639b2d85d3ce7828864084f6da5258ba83870ab52a31873d250a3bb5964dfacab0c8f344a9d1401748608838c9'
    )
    rsa_keys.append((rsa_key_102, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc000100000000000000000000000000000000000000000000000000000000000
    #       000100802000cb0040908809180008c8000000010c00012101b20000000002ad
    rsa_key_103 = paranoid_pb2.RSAKey()
    rsa_key_103.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_103.rsa_info.n = util.Hex2Bytes(
        '88c0f200ba3df82394c32b536e6d5d247da1e25c7e1b7276de3a1a08fe9813840f0ed29f16f13bc3956ef90aae17bc4bc18a29570f51fa9f7ede07587e710627d3818959373df64aa81a1a663a4859964245ee6608e6769765bdb31d6fc0030ca37364e00196df9ac826f35e81f1c93cc95707f80aaba1ba2a8013bbdcfeede1'
    )
    rsa_keys.append((rsa_key_103, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xcec727009ef07418dc89e2c96e796d44bc2244d88a0bb8ca90b4d661736b486b
    #       6e1d8352822a4697cdd0702a3d8b7c4b23ada2285a2af09234a71346ba141795
    rsa_key_104 = paranoid_pb2.RSAKey()
    rsa_key_104.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_104.rsa_info.n = util.Hex2Bytes(
        '8b7a860982790aec5b725382f6956b53bb553d42daa40549ede8ea8164e13565d955dee3ffe5b9392440326040dfb8066cd654ff904804c654dfb67c9f084ad6c0311353b95386f2e934cc4920c3ec29a30fc42b99ef92daa4749acb573310bd9421d54a80fcf40e392f1aa0e9919abddee97b4bf71f592948ddce3ac353647f'
    )
    rsa_keys.append((rsa_key_104, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc8dce72c0e38ecaf2e3e11aef07326e3431a92ad87ef296d3d0b5d4b3d00646b
    #       ebd7b3af6c9e424e074e1486d186d26997a4d9c131acb524881aecace287c057
    rsa_key_105 = paranoid_pb2.RSAKey()
    rsa_key_105.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_105.rsa_info.n = util.Hex2Bytes(
        'b4c82c1d65d0090dc7afb3e7b643a6290fdce1f05ff52c8353c14048d080fc5ff3d4ff760a01fb73fffb7b3a20d5a1666c4728c638b66cc8d05c8438233c60caa74d2d2f09a59c2b465c4f454b231db69d9b2034ae1870e310a82075cd075d0e3aeceba25b82cefacf91fdc56080c64e06c9bd764e9865323b70b0a112116ecd'
    )
    rsa_keys.append((rsa_key_105, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xee09f0be62014c7299e188527ab8cd004809c631f1fd50a20013331678ccad20
    #       631879842b8a122569eb18c4b1dd5e4b11bce7a14f4ae76973debf4ca768c4bd
    rsa_key_106 = paranoid_pb2.RSAKey()
    rsa_key_106.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_106.rsa_info.n = util.Hex2Bytes(
        'edf5b914425edb4409ffed4bb0ad86b9badb5d3a832ece867117f8b5ed213fffc1cb42b80426ea28ad9136a22198205df9f84283eda3a84fab8e46aafd8ba719358982df07b73051ce6a7b8fc8b5eda42bd1b4593dcfecaf8b9ee23c4669973bb4c768e19a73b81b4e4cfca38b065b4b182471b19d06e3d7db0599d70604c56d'
    )
    rsa_keys.append((rsa_key_106, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd66cdaeef275bfd3d1ee65df430dd7ae015bd0e9a5e43890e7835e2a2a0fb702
    #       703d6c3fd50d5917f3ba77aeb851c016d26135d754c114adf303d091500462bd
    rsa_key_107 = paranoid_pb2.RSAKey()
    rsa_key_107.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_107.rsa_info.n = util.Hex2Bytes(
        'b01983778d2e372229d6149a16e1bb4c6a04fb6e6abbe48558ed344824229e1ccf2b67c73702e959d13102dd9a4f2bcd70d173068454f8c6ac8d384eccf8ca3f984b4e5cda740690cb031861f3f09850680a50e631dcd6823a9601da6bd9c602905892ca0b7a455a49dd5bfdddbb2abfc5a809d5bf493f4964cf7ab4d4f6b7ed'
    )
    rsa_keys.append((rsa_key_107, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfa147ea58cddaaabe6dfa04ff891009db3ff37e1272d573b7a3da5334f24f951
    #       2fda7ff4f163a72482a0edffa9140001aae21f5a64fd330f93e819a968acafb7
    rsa_key_108 = paranoid_pb2.RSAKey()
    rsa_key_108.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_108.rsa_info.n = util.Hex2Bytes(
        'b9f9ba5791148e9202a826fca53f6efe7ae1371dac647ec9fe91d61929062e5f3dafb48b73c94674a1a15450d63f500a8a280314c4e57f70090f2fd87b376d61887c3f50acbca1d0bc981371a28ecd894f42a8f9292e968c247d80c0aa2daefd3e53b285aadca49fb6d9517b3344b2836cc0ececf7c794b1e5c8d693a8870caf'
    )
    rsa_keys.append((rsa_key_108, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf718c0bc8c57cc318c99fa15236191a531828a95856d6ac833a7e3a2110dded2
    #       5226ea4344cabbb2fe19de14863b8c46e31b44038c87e8ce4aea42a10afabf91
    rsa_key_109 = paranoid_pb2.RSAKey()
    rsa_key_109.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_109.rsa_info.n = util.Hex2Bytes(
        'aaed040b5642c4fdd16b82099e0765ecb495d914e76dfb91f72788ff977c8200886d95b5339c2032607ac1b000eb3291ba2c3817f16d48fe6946e075a56c25bc68df2989f021a40d53b3f6f5b08df6548a47aa4e1ec4f954102f63b8359fa1f0be836245719e523e39ac635eceadd613e9bc7529bec4b459b8378e08ef5ab2b9'
    )
    rsa_keys.append((rsa_key_109, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd86d99e183ba3c0870238db37f1d3f673cdec3112196acfaa1239657bcb3a3a7
    #       f6749f3229f550d5097510e5a5df0626a641e2112112f95080c5629973b1c975
    rsa_key_110 = paranoid_pb2.RSAKey()
    rsa_key_110.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_110.rsa_info.n = util.Hex2Bytes(
        'aaa450b67a6742b79a8f8bdba1f26fe243ce9e2605260be9e682c7a3d5564d1d8df108091bcf1dd790f3d6bfd98598a2d51aeb922e54117f9306a6e96a8fa3817fb6dae633de119c8f4008d6d63f3790739c2301447d7b0dc4766cae1261fc4ce2b0b16558afba6887667153cc2f40e6ae0f2be7cb0c2dab775cd5b7130a0df3'
    )
    rsa_keys.append((rsa_key_110, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfc1fc95ee7482142bccb7f0bc5cd674ad82edca61fe2653c78622ee673485cc1
    #       1c993aaeeb15f77d90dfe1c6a945e239ab47e5ca3eb2aeb702f2de36626858db
    rsa_key_111 = paranoid_pb2.RSAKey()
    rsa_key_111.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_111.rsa_info.n = util.Hex2Bytes(
        'c237ce5a8cbfe0f53b5aa581ee9e26a41c9aad591fe4bc9e85decb7a64321c76b4ac380f56fd718c3bc8c9b028149be02d8ab8fc5ee6dd86fdddb68a6d643be3590666295ea2ea0da1ede18a5e316cb8e2c2d55c3fa7a376285a2ccc88449f567ed3f204da835302a26632dcfa36e1db89f9bd4e595ec972f90dfefa0ae57137'
    )
    rsa_keys.append((rsa_key_111, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf7c6bf218fcfadcba926ac5efdf60f97aeba8d5f70ceb27eff0f5d57e763bfe8
    #       6dc7a86ee76b8ba9d076bf1a8f4a7fcfb0297a96c6c5a70ea7e5e3c38326ff83
    rsa_key_112 = paranoid_pb2.RSAKey()
    rsa_key_112.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_112.rsa_info.n = util.Hex2Bytes(
        'b9a87a4638aad041109406951b97c3e005cafae41b75cc1bcc8eee6dd591334c69f628eec2b95594e341aac94303361b0d42a594ce50209149103534058077739aa083d1e319715ed7b3c4fdfc9598c424dbbc8ae32c2630837ab89cbf0267ff5d97c084d859caa536b14706c4f24e3a1fc999dfc981806c706b29990e767999'
    )
    rsa_keys.append((rsa_key_112, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xc594391e8e8c24c8a7fe971d78db784d43c96ba3384f02acf71fc2506736c65f
    #       7c44ef6c3bbf7b05659b954c6b9ce96f648c900b56c5f3ca01e47384ad4de577
    rsa_key_113 = paranoid_pb2.RSAKey()
    rsa_key_113.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_113.rsa_info.n = util.Hex2Bytes(
        '9e47119945e72b401669aab1316229269bf31ce230ec08fee7fc7752eb1d6a65d79bf204343e6ee0dd9ac9ffdc1a296aca1ee4533a3bcbde74ff48e6c3ca8c9f10aea7545395767f7884eb4fed79bf995c236311d70dc76f8edb60a6af08517fa8a7dc6d0770474190bc95c8f3c589d73f9b83b2359cfb7672ac758718952bad'
    )
    rsa_keys.append((rsa_key_113, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xda975410693d3120b32997c8c728f09d09610f5fef089a7cf63ff1dcf673ffff
    #       b493c19c64167e0457646aaba4f3409f9648ff7c390c25d4a8a3d7c9b2f16b2d
    rsa_key_114 = paranoid_pb2.RSAKey()
    rsa_key_114.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_114.rsa_info.n = util.Hex2Bytes(
        'b9f50362bae1ad4c6bdb56076b4fa8209009ace025a265d0cb4f8f0ba5bf838e6e1be977445855253081889f262d8e8db0854aae809c080bcf78b9f5ff4accb3449b43d561a165f7cabd2950c9835351ac6247cf3ca2ddbfe1b5bf50bfaff4c9917cbaa48b7debf6b74e430909b7680555f8fdc7107b1d05cf00884939aaa17b'
    )
    rsa_keys.append((rsa_key_114, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xf16fead9af03cfcb36571b8b3fe3cf24e313aece858b7d4e800838329c9b729e
    #       cc6d691df4ee8547a9fdb18debbca338af8214fa1e03ad53f8e3a0503bfb6735
    rsa_key_115 = paranoid_pb2.RSAKey()
    rsa_key_115.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_115.rsa_info.n = util.Hex2Bytes(
        'd309aa4910af986e1cb78ae76eba7a66cedf519d30dc6709468fcbcfe144106688ee918cccca07ce426a1b1a0a8feb421be362613a8269a143e2056ea777ad7fe8e7d9040fa4ce7fe0c7ffe14ca4eaf848ac68f4b505300b95b2c8b82b0b936c147076f7d03635032613fc6f37ce3fbf46d9b9fe5ea08abfedeef31176724b65'
    )
    rsa_keys.append((rsa_key_115, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xddf3b56a7bb556afa1476addb54aa95e569c94ab62d5fa95c054af04b5a3b56a
    #       dff55e2dbb466ed1b56aad5a1629c5a93ad55bf5ad1e3ba4e5ab9722daf5d7bd
    rsa_key_116 = paranoid_pb2.RSAKey()
    rsa_key_116.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_116.rsa_info.n = util.Hex2Bytes(
        'd984d1938dfc94be4fd36711655d75b606d03938982aecc9b27e5254a730066d1d452bf422f9f441fa895536227ae9a00cfd38eb7b33a86394aa8dd9e392924969694563889c06d5eb177b6d1e04d7047864b22d5cf6463a30d4080c79218ae9e251556ba31c9111300e46bb6a6606509aad20ab43ff2155307785cb4ccf129f'
    )
    rsa_keys.append((rsa_key_116, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xd9958fe30334b89c8c02ac210c4dc8e6e610d1c958cb4d436e11aede0f72e3b8
    #       a88e18b7c663533218c68ed560b031ad4ce38aa13bbc10b6c73fe3911acc8de1
    rsa_key_117 = paranoid_pb2.RSAKey()
    rsa_key_117.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_117.rsa_info.n = util.Hex2Bytes(
        'cf3600ad82cc9f4bc0e0ff286f08653034a969f1c6124e6e47de240ea46312910689437dca702db818e4ef40abf123bbd13ed6bdd9d8c3490588a022a36121fef2c10763f94797a652d9ee9a4c422700232a159615f9d4c4b3eb384bd75f9f95e5d7b82494199f8f9b97b7c0537414098fabdc7524b4367826a4e9d31e82d38f'
    )
    rsa_keys.append((rsa_key_117, False))

    # p is a prime from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
    # p = 0xfcb0663ef5e3c922936834039fd787a0de9fdd178017021129cfb592570fd3c5
    #       e60787fc59128bce5bfcb38be0c064b08c087fd8fe6b960207c93ca4cf3c5add
    rsa_key_118 = paranoid_pb2.RSAKey()
    rsa_key_118.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_118.rsa_info.n = util.Hex2Bytes(
        'bc81b0855e2a84553c66627e0c32ae3f9221aab7b964041fa907381fa52afda5cb4ff09a853656d8f89dac9e8debf93ee8cad36295e4f8ce9930858d76960abebfd4eb34f3d546610221cda134ae6c9d15d4b8aaac76bc0d45e75070ef86b2de87c58cda34cb2cacafa91c4aead38c9f62db32baafce8d4a2275feebfaaf1cc1'
    )
    rsa_keys.append((rsa_key_118, False))

    # Test case for Fermat factorization
    # Hint: abs(p - q) <= 2**512
    rsa_key_119 = paranoid_pb2.RSAKey()
    rsa_key_119.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_119.rsa_info.n = util.Hex2Bytes(
        '80b4e9b0f9b74c27d31e0f3dbcf07f62ebc8805d8355be22b4315feb95b63675d09af89238474c9bf09c68b4da24b5880a8ddfdfecbf2c8a882ca8ce774e383e3edf2e90340c35df1a8c94d404f6243478669d86d5b6e79960ddcfc93eb7686310d04a3669bb392a4dc8b1249b12854f577a4fb3dfe846afd98e1fd329448168867331d9791de47a957f63f13819404b03e9a7088e0332534225a4e6b47be1eaa721448f7043aa35c753d49d3aec93ba3b986cb57189c3b5f22de2f92da1f2ad2d2cf73c8db408484fb12c1051abcc9401d912a00919b1c7da5dffbae750c0d39bbb7028995b13475bebee5a1444fa8ee633eda7fc3ed29133798cb6c8edc71d'
    )
    rsa_keys.append((rsa_key_119, True))

    # Test case for extended Fermat factorization
    # Hint: abs(p - q) <= 2**562
    rsa_key_120 = paranoid_pb2.RSAKey()
    rsa_key_120.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_120.rsa_info.n = util.Hex2Bytes(
        'dcdea4a20359d8acd83ccce9987b23044e5facc195cb26524158a3a222942bde1503c6256949fd8bbdf4fbfb0e1feb41b4c18ba8743ceef25e99872bc40563755ef9f7addf090bc5f1e1d9978988f514d691e3c03352ac931f97072a94443f139fd56a73ca68f00643d5b63aff3a4cdfa657c1538030575f0ec08ee66a1e308a7f13f7efee1f44b7ca53e8746a9f8b2af08db7acdb6a53f142700c5661af9411d0717a763de0bd545d7a5a0921c4d46cd8a154baba5f922cd82262dce92ab7dcf98fa6d0bb08ecd5a79bed8d8cf12a11abf13a6a8f7758808da0591a2644901caf79734a333c2fdf938391f4ad5a0d99e99bb32e50c81a880b7578317d4add1b'
    )
    rsa_keys.append((rsa_key_120, False))

    # Difficult test case for Fermat factorization
    # Hint: abs(p - q) <= 2**640
    rsa_key_121 = paranoid_pb2.RSAKey()
    rsa_key_121.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_121.rsa_info.n = util.Hex2Bytes(
        'c068ad88c3dca1b6cd14d75cae3afd4668217c422140998f5cb6420b280cefc1ffd03f586f970c5840a746f56ba2aa3ba2cf4a2e5e675c22970450c4f9f45819b81ba11cfdd6f0bff9466e40dfa17ad0a24a3e3ca9692838dc891bb9caa8d3f99427d3d517d2689bdd003273c0f5183ac1a2c815f57a1b32fee1fc91a850a0ca9c5148ee65aaf395f757bf89d1e67397ddfd20566ce1734e75273bba06e2fe1d8c72467fd15738206c2d2bebb96cdc0b3deed08006676d9b335d57ce9321c50da82d21f4e64a2cb4f86a3db93365f73d1952629ef89b98d7f00bf0124f0bff042e32dc005fe4ab5535527c026142e6666e7d55563f7dcbd736e25ae9bd158a59'
    )
    rsa_keys.append((rsa_key_121, False))

    # Test case for Fermat
    # Hint: 2**924 <= q-p <= 2**924 + 2**100
    rsa_key_122 = paranoid_pb2.RSAKey()
    rsa_key_122.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_122.rsa_info.n = util.Hex2Bytes(
        'f9c08fa0e1ce50f69d3ba5be1f151f570e316bc9afc6156136cb567cc2d206db4a8185b36cc7e1305c3001a9b952e518e81c2afb0e0725a88033aaff0ea9fa3b854172ee1ee01ac70a73d2bb2a861a9484204d49433804a68dfbc9522669b549bfe2696d393cf14bf7db21d75c4eec31782ad621d35d976d4647d75e7ef18bc66126ca31bb5a087f8d7234c24ccb15c2b9163f1c7d6edb09b698fb5ddaf00c9050dcdcb2d13db6b1e50a0d5523c337acc5a7fd9de7b7c210796cd3cf30791c126a5912dcd3304b7043e9448e7300f1bde0e2b07158c1cb00e4223a044316836d20d9da2923ea6c4681e8d6d3188406df6865cde22f1618f108e23ba1e3504b09'
    )
    rsa_keys.append((rsa_key_122, True))

    # Test case for Fermat
    # Hint: 2**924 <= q-p <= 2**924 + 2**120
    rsa_key_123 = paranoid_pb2.RSAKey()
    rsa_key_123.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_123.rsa_info.n = util.Hex2Bytes(
        'ff92b3c4dde68316226b922d2ae51a4ca0c8a5cf3bae06a7f86a0d75ae45ff6695b1a52dd89e3aaa9705777c3451adf603806af462a515c5f5fd7a824c8ebe0c76f5e2d49b084217e9f7da578bf3a31e027c8c47ec53d0fd3c9ef06e7f1a138856ada69400dd68add35f9829322c643f0041240c02d2e72e20cbbab5f41f79e217d9be73e2f945efff1f335eaadbe8c1c4a4b94a2a254565417c3c798d93f2cdadcfa0034c2b7034f00f356be3d36146e7f75afe450a6ce2412f311405e18c7047525830cc92ceca4f0b92878f0ca8e7d85584c36ab2b572a55d079ce5c7d6b5919af0624232a7c5df7f0393a3feaed9b2aa8b880719dde2ae06565df2645bdf'
    )
    rsa_keys.append((rsa_key_123, True))

    # Test case for Rivest Shamir
    # Hint: 2**924 <= q-p <= 2**924 + 2**256
    rsa_key_124 = paranoid_pb2.RSAKey()
    rsa_key_124.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_124.rsa_info.n = util.Hex2Bytes(
        '811f2a927f49a3a206869483986a952575af4e8069d93b9c8393b21cd6512c25645928425fc40ba90321cc3eb7d3b9ef78b8ed27c9fdbf054b4202c6f475b46437fdc0e21ffc5760839fb265a54440b29d1994065dc5f947568ea8ad3a39f5586401d98777b507bc2d0455b43cbc8282f9c751a189d2eff38c8b2d63a29b5e10d45552f4a99d95cefd595614dc1118c1e56e591dbc87f9f1415086d0295d450ebc589b65147baadcb465853d2ad99ac0b1f11417b7176a7a7000c0e882b948426ae6783abdf67c075905bb8f840b1a4a1b74a76b050294931948bd6201bd0973b5c0910a9ba74757cd694a530f88ca3e7ea66af3390f1246bc1e9b1df4ccafa5'
    )
    rsa_keys.append((rsa_key_124, True))

    # Test case for Rivest Shamir
    # Hint: 2**924 <= q-p <= 2**924 + 2**330
    rsa_key_125 = paranoid_pb2.RSAKey()
    rsa_key_125.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_125.rsa_info.n = util.Hex2Bytes(
        'b9fc154e4241426560e2c64a671b942b3215709ccae30eefa922e5878aa3ce98545e970b6eb5ac038f9cb51586af6ae29748ee945c7df44e8b1d990e690ef9591c84cb66f613a210568147e2b3a1f8126d8e449fa142aa4874d1f0166948298082f1df7a3e4fb292337720ab8a13630921028b164dbcfe2960e7fff8784930317e6f705534bfc246722d12c3ea47477ca8d9393fd5e918495068b146a0db5f7773baca6fa2f728ea5cb6e1107406263c76f641cd89689034484980523326034df97bf80b64923bdbc894c3aa6b18c116345aeab71e29657aebee0c528a753123abf3bec06080afd73b17b8be7381f5ada3f9ff601d7a6b793dd6bfbed8f10db9'
    )
    rsa_keys.append((rsa_key_125, True))

    # Test case for Coppersmith
    # Hint: 2**924 <= q-p <= 2**924 + 2**425
    rsa_key_126 = paranoid_pb2.RSAKey()
    rsa_key_126.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_126.rsa_info.n = util.Hex2Bytes(
        'c675b008fa73b52919bee4ab92e341db0e88341ae1f44841624a4258ce5c056c080410f6d46879a8015ec2a6fbbc41045a13d02e0cc3b3f629cd555d3c33a109e51696e48b629b12ac1d5bf341b950f8d57a7d1780aac79b208f8a091686fcf362d971602b327c3bf9f00c4ed58333b127185d08d0f3dbbe3fc0f3570de2a9e45d9b751378ead7b340042393521b2233252838186d860ce773ba437eec149cd4cf0234749e4afff69defd5f8b67490e24ff65c9002ff1c9127d279a92831738e1b351819980db9ff5accafa33db42767e623c1de6b284ca801d09b9d7d7da5e5cbd1498e583d0b3066259f6e4e13fb7824aef858dce947cbf610445ab6ed263b'
    )
    rsa_keys.append((rsa_key_126, False))

    # Test case for Coppersmith
    # Hint: 2**924 <= q-p <= 2**924 + 2**512
    rsa_key_127 = paranoid_pb2.RSAKey()
    rsa_key_127.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_127.rsa_info.n = util.Hex2Bytes(
        'fc0334ad0508e8fbd9aac6837e646e1b9415eabf59721593f2656252a647ff8b37b9e32e076a9176a7dabd984559daf2c642e1b882371fdf5921c8c1530f2acea56621c21570c53e4fd493848a1b0565b4aeee4d2b7fa68dacae92330d27daae3e4bb4403b312494cd0f57363eaddb1a22a2e5df160d575aec6b035943f44422b8f7d16ea4b68c00ea42b64d8b40d3644a3d24d1722b55752b61880124287fee2098f322489057da7436cbe6842a30bb9b1b08ad3f7e716f2d1a51a700692d6cf7013df4be044422a00da9a6392bfdb40f0e6b105b4455e19b98a253703e2da5f684a099b2151ef50bf9985517ae61625dfad7a8fc7a38c27fff90cdc2550d7b'
    )
    rsa_keys.append((rsa_key_127, False))

    # Hint: 2**924 <= q-p <= 2**924 + 2**600
    rsa_key_128 = paranoid_pb2.RSAKey()
    rsa_key_128.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_128.rsa_info.n = util.Hex2Bytes(
        '8d08ef1c8478e6d13466f8de53e3155595a2f84509cf95930840701f01cbff19be14a123d453f2324e97a94e96349545285a2cb47bf6040dc6b3185e370f46cbf5d2a73220c82695e0daad242d8d64775bb83133ecd6a066e26fdb9d002b289be0056ba679ba15d38320532e46ced547c4ac7a516e16d9e21256742d73ed7df32e706e21715aba2424e479e5c0ae822c355660253009fc9bd92e07be32e450ff42c16e0211fd7fdd2bcd42af1f04b07a2d96ee90d4d678065d71c127220975a18035d75ba29eb86f3e327316e308f3478a96e176fb0973bb25bbfb5fd61529ed4a9911267b5a35179f4dbaf648bca10170201bb920b2bf277e36f1f5cf1f813f'
    )
    rsa_keys.append((rsa_key_128, False))

    # Hint: Key where one prime has repeating bytes
    rsa_key_129 = paranoid_pb2.RSAKey()
    rsa_key_129.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_129.rsa_info.n = util.Hex2Bytes(
        '9dfc9df79eb0991e790abf120bd37e7f2499134b5b6071cde7c740f93071955d2a38996c2dd9f11a075a89563b0977730508d1a42d953c2e7cdf498c8732b8e2f63d29d1790e2cae627fc91505ca90332b5a05f3b6c849b7917221f615aee03fcd1f5657aa31b1956bd8388eafd84afeb0ab523431d4a2d71f8ef822dfffdd35d6faaf265b55007b61c91de584ae69be0dfc69743284bc1e2454cf0745bce5e0c79e79ea4d8705f578081f707b711848015cbc580a440576bb2acc5e0e4753d03164ba6009e092fb82a71576fff9ff3e5f729bbf7922228fc133a803bdeca273a39cc6505a841c0cd7ca44f6f235757de2b65ec25cd0654a33d5edfabff1a59f'
    )
    rsa_keys.append((rsa_key_129, False))

    # Hint: Key where both primes have repeating bytes
    rsa_key_130 = paranoid_pb2.RSAKey()
    rsa_key_130.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_130.rsa_info.n = util.Hex2Bytes(
        'a85501ae4011e3b542393026ff152b418838e99949db6cffe72767a79b0f83f830d57a1f395979999c6227eccf4ece4ef7b4712d3008e1ba7536f8baef205182a8acb0b4c3a07d595a626a730c68c521cc7e2fe1badbfd1e820487085486b8eab2afaca9a2066ad1821ab34adfaa75406c0eb153707d8a97125aa2eb504338e61371cfc84db114436c9dcf0560bb149413cf8a15adec2c283e5469cbce81350a3bdc7ca053616fa6a624a2eb70635598a43eda70b5004acc10ab45b12073c81de1e8eefff01131749d6b39dff16fef390f87ffb8a6bad036617c95f8b89d81b8f08921fc6298d0185cb0048c04bd7616834504cdd73ea73b790ea45604d6afe1'
    )
    rsa_keys.append((rsa_key_130, False))

    # Key where one prime has a repeating pattern
    # Hint: One prime has a pattern of size 128
    rsa_key_131 = paranoid_pb2.RSAKey()
    rsa_key_131.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_131.rsa_info.n = util.Hex2Bytes(
        'c617273a370de2419b1dbf60a8d6da427bf214b2d96ea792dfa27dfd8c7c3c01bdc0f0f6685468f3f074900cf6e9b1cdaff50731c33a98d78deb0ffa5e19c77abef656d5c30960b779b76e51c013c07b3a9ee803bfcd76516d36a6327da4d09cb3b725fd2fead24362199e308000e205681707b1482b45258239c9234f4b206ba100b8f30030d5fae3d9a637b15da97dddc8918bf90f7ed307a760aef7640600a58683dab5440e5c3a8e8a28823f64ac894455e82cda40c4637a8c8c522e8746fbf6bc4781c4461bc44ae823fd5826c72dd0e3afd069c8dbb9e2e8cc50897eba91845b24515a85fc3f70d9b328f9eaa335011b876b78d43c6f52fa396a074a8f'
    )
    rsa_keys.append((rsa_key_131, True))

    # Key where one prime has a repeating pattern
    # Hint: One prime has a pattern of size 240
    rsa_key_132 = paranoid_pb2.RSAKey()
    rsa_key_132.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_132.rsa_info.n = util.Hex2Bytes(
        '98ca472737fb3bb5e0a25078fd34ef9f630fc9d1d56aa451b50856861e3a523e8988a248a853248eea481c2e23b63c82ee7370bc4496c4074b6d00b8ab9bf532e6527fa592d4409916fbe3f9864b7747c67d8af38c49a54de4bad73d44b05297290a660dc323fc85e70b7a9cfa42e50e0f611cab9665b8d0d01ac68f1eaab6c3e6d9b9fb98c03f258949991cae6fdc0ef4edfa59daa553e3b6c73b375c74120dba29d25423a568bcb7b82b34261e2d5dab38eb9d54e283abcf7a6554a9b3eab95fef6680f07b465acebca5171fc9600b5427221969f607826ba501b7c2329768b14c2d742abb28bda5e19fe8598dbb42a68c689b0ee3c8f6b66e4696ceb86c5f'
    )
    rsa_keys.append((rsa_key_132, True))

    # Key where one prime has a repeating pattern
    # Hint: One prime has a pattern of size 256
    rsa_key_133 = paranoid_pb2.RSAKey()
    rsa_key_133.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_133.rsa_info.n = util.Hex2Bytes(
        'e8299d2048d4371c602a9bc93cb263a8d623b85cf09242c13128061c6d276f12c776971af088d9d5bdb05676fcbe1e38f953b653e8c34164b2129b96b3998dccb22fe792b3ba3e4b3691bc6405194cab72a7e8d31ebb8d214c0399f4afb532203a9527ea8cb85f7c05333d79e3621c0915ef8041ef0f9d4f4c13a5f2907c1adc544d5a24bdbe7051429cdb56e0ac345416e7c7838d10ed5323907723c1249c83d2ef66555aea5a1a92722f2f07a3fd5a7f2476a12e1889310d3e7f8675d67d0517493184b0f8ad255ef4d3291b256ad4a8d6d4ea6c6fd5c27eebff0ad036717b6cfe47177249acae9813cae3654453f87a734894bbce186d691e6ec341e869c1'
    )
    rsa_keys.append((rsa_key_133, False))

    # Key where one prime has a repeating pattern
    # Hint: One prime has a pattern of size 341
    rsa_key_134 = paranoid_pb2.RSAKey()
    rsa_key_134.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_134.rsa_info.n = util.Hex2Bytes(
        '9c6fc8a20e00dfc0bdfc46e5e0bc38d76b343708c4d2598de910bc566525507b7e68ae05f50acf377b4cbd6b992a2fdeecffcfb6e6714ce05d72cf48e4a5547a6610b79710a6c7ba8d100c847bfd6d5dc8b361376723311fd1badf0980a2a6b98279c1ea4bf017e6e6883a740b02b367caf35b2fdceb59c42f4294cf8114ad94e6f14303034884c90d6289230da3ee384b965d31a05e8d098d802d1c9c15185a1e9f32e5b1378512ac4ea7f2ca4dfcdf5be008d1008ca0e2ab97fc9f6037db38d135279dca0e50fce2f37909314bd6b622d72c1f4e9c61ff348324567342d3211b2d8722cd7be404f52c35c214e98e8a888051067cf8e6cdb6a7c36738b244bd'
    )
    rsa_keys.append((rsa_key_134, False))

    # Key where both primes have a repeating pattern
    # Hint: Both primes have a pattern of size 512
    rsa_key_135 = paranoid_pb2.RSAKey()
    rsa_key_135.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_135.rsa_info.n = util.Hex2Bytes(
        '89aec8abc34724bc2e802c632753802fbd4182f7e0bd8dcc9fb61124b48144243ca3cd76982b02b7076349d1ebb78592dc333be2976b3899963dc3ea996eff5a2463d3b957e74f130b51378e653ccfb5dcb2331193f6e49fd2ef92bf90d45b23bd2cb6c27a81f71ea9e725594a48c60c2424b721c3ecfa1c6828cd705aa496518fa17ed1fbbdca77b35c9f7ebf3f536cb9e09c2bea473552cd37bfddff573815490a49fd64b218cfb03c449b5011be531bc921edfa55d94c9f70bcc61a3164fdf4ec73c4671da020d68b9453815603e69a6fec12370dde7f99fe3e4323042115c88160b1825b24680db86913f1807dd9d3d7a6aecdd417c9cd85b34058fce239'
    )
    rsa_keys.append((rsa_key_135, False))

    # Key where both primes have a repeating pattern
    # Hint: Both primes have a pattern of size 367
    rsa_key_136 = paranoid_pb2.RSAKey()
    rsa_key_136.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_136.rsa_info.n = util.Hex2Bytes(
        'd118b0ee86a471b2dfadc9b6a2d4f4fae0b1c97f8fa0cabd701a609e80aeea8bfadc0a2dd4fdea2a6d6924825b318ef32c321776141efe45dd1b84f181bd38e822bfb17ab8840a62752b1cd30791657ca8f68a144b00ad0f45ff3ceef769ed0e434689b07a604d938872330960d965008767b71a6920523270907415aa827d4df3c885a00ea57fe2303d629dd9e7caf1fc1f8c9234a43a7c11f99fa2542d8d0ffa2106d26204a1f40469db143b15672f3090d4570bda464b5f2d6127447a727521d21bd67abb65b783202a568856dbf8bc372498683e75083803d153cd9aabc316c62fe05837f23e1cfde621d95654ff9cc900fd4ef78df758a3ed1b875ef049'
    )
    rsa_keys.append((rsa_key_136, False))

    # Hint: One prime has a pattern of size 7, 16-bit words are swapped
    rsa_key_137 = paranoid_pb2.RSAKey()
    rsa_key_137.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_137.rsa_info.n = util.Hex2Bytes(
        '8555e7bfc4fb0e5eca902421b9f34edcd3f22693c856a22df93d646a886653f0e2e44c3f8a7e32aac290484982875157807dc257210b0b7500277bf7cf8908a845d7eeb3d9b486ffdedbfd87d285f44aa740ba7ba0259f0198403c0a2340ac4a7dd628f2fbff53b1cab32869e9b363cd48e6aac48276c2d3616ef4de2c2e8d8972d08bdd07ae2ed671b86be76f2204e3067498f2bb0278f5dd9e2c9375e022a63038275aa2c3d7f77a053ff215ba53824f2adcf284eea8409571eeb0a847ed907b6579501d96ed7c31977e11e594be98e648310170d737060d53edc5307077e9c766ebfb6fd313c8b006565765276b438d6509db25a4057dd75f1a3a3c4e4cd3'
    )
    rsa_keys.append((rsa_key_137, True))

    # Hint: One prime has a pattern of size 7, 32-bit words are swapped
    rsa_key_138 = paranoid_pb2.RSAKey()
    rsa_key_138.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_138.rsa_info.n = util.Hex2Bytes(
        '9be940ecfb840600bce150bf59cdda45fc7e2b6d27163372fbc8158f6f3cac318a9697177f8c5deff2f3b01c90a188cf37bd2cfe2c1d4ac68f9b72a28860c1e8bbafb9d1f948d8762a95a9dd7127ae2b9e9f75cf32c038945f0decc7209c8e8a3a07e283698a388176e1f19baba0bea1d046b8b1904e61f86847607b22e44009183e1c5dcc87a95d37b6682074a46eaaf8dfcb33b0ba51641cbddd8eb0e7be2800faceffb72027e6912000a8d32fcad12c107f8fd44bb36a420dfb6b776aefd427e83aeae58e4d2f7b81c7360f743739d59b6bdb559b2c723bedb924e88b7adf8ca0e377801417653be1f8d1a12f672a24ac1f05d10adea0629e31f3a7766a3d'
    )
    rsa_keys.append((rsa_key_138, True))

    # Hint: One prime has a pattern of size 9, 16-bit words are swapped
    rsa_key_139 = paranoid_pb2.RSAKey()
    rsa_key_139.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_139.rsa_info.n = util.Hex2Bytes(
        '80310ffdc91bf8815e69281bd6210d00cbbf3bb88d07632d2f4e0f280d37081dcb835caa38194ab34175c1859c2f46407e7335a565d7e16a73ceb7ab731e9f99ffe14c34bd4ec99ad286a1d3d9439efd8969b89844516a0b6b309cfa20cf67712436be0878d060fb09728529c94f8fae73d6453919427e85e6a6222f708479b225aea4438cc9a6e7a0065a7de76bc56a310e98fef5f6273d673c4cbd726a47f56364c86e3cacb5e59057aa9a357c14c3227bc281714bb284dba655b5604c5c2d9ef6d99c4ee6a8dc3208841c23c9e67062c1b111205134378e6a7c35efc0c7583137aeaa76001076b0c5569b4937773775ae1d8d77be8086c63be0e7eb3f437b'
    )
    rsa_keys.append((rsa_key_139, True))

    # Hint: One prime has a pattern of size 11, bytes are swapped
    rsa_key_140 = paranoid_pb2.RSAKey()
    rsa_key_140.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_140.rsa_info.n = util.Hex2Bytes(
        '9ff410d489527fa38277d0a414f8080ad0fe0fdc74a19df2d543ce43f66468e4db3c02b76487f9937580978e4c8f13a03725f2b1437c1f72f3af9093302b2a0b7e6beb93848fdeb3fb01e7e6c21ee5f1e87601548c55045f585d7fcfeeb6a08160ef51c3f191a467cb6e0d478bf08d28afb63a218d4a03e5376bd2c99ec3c501045ee8aee86b49acb098d79dbbe1163cce89ffba9768522477ae948b9c7b0d9cf00141ff9b47ae9c32dc8b2defdf0d43b313b4c2e1835ed80a27dddb18797e69a239e886f2ed0afe3ba2d8eb9ea515628f01bf811f02e62b30bb97c2d35cc3dd91423f939f14321bdcc66691e9da0706c109db7bc7708fb3dc37acc1a23403ff'
    )
    rsa_keys.append((rsa_key_140, True))

    # Hint: One prime has a pattern of size 11, 16-bit words are swapped
    rsa_key_141 = paranoid_pb2.RSAKey()
    rsa_key_141.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_141.rsa_info.n = util.Hex2Bytes(
        'b64ccd3703397d89c7be97723154a12906f8a38baaf7605eab70c7be9f9cb45bb02124ecffed050db23f245e8447179c4c58276e700a90384091a4bd3de1fa62fe06aacc2acd3a99d4913ea652eae9b50d5a93af3d6c3bddf1266921f9032aaa59745ec37db030cec0da3e219e81f16dc79cc442300cc968f037b86657252d92f12f3838ac4ba93a1aaa0af9a150e87a324d67a02df6cb2a9de0729167fdc978535de5ab051e4097ba41e5c9d9d9b6270e62455621bd8d3b6ec3a391bbd7e6632ca1e1ed23b904e55d50fef2eb461add3f88d68e195842e34b57c9d24eb5f5c9d11383ed6fc004baa8cd279f32fb3bd0f00d97c1a4886ef78f435f92fbd55619'
    )
    rsa_keys.append((rsa_key_141, True))

    # Hint: One prime has a pattern of size 11, endianness of 32 bit words
    # reversed
    rsa_key_142 = paranoid_pb2.RSAKey()
    rsa_key_142.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_142.rsa_info.n = util.Hex2Bytes(
        '8258f9f41afc6b608c49e962449f3130d46b832ed6892d1870130154f15ecf7510b15dfdd86562a29b6fce8ca8d433c953069a289802699a94ab61890dec0d67a142c5ae02138833844276e4a3a7d4db3e41264beefc1397e21d4dcc2dcd27cc9cf093d72dbfd3caa2c2b44fb9fe1e7a1dbb077e32e0bdde0dc44739a428022870aaf8cb6d381220553e0f4000bb72c1ef59e811c34138d965d3e43b6ff8dc936843344d7b2579ea4107f03fdce8b3c5cbf5b0e14ddfe989b5b9ba588459d32c9d0e65c50757ae5495f626f60c425bc4b73bea673976de75163848f9e1ea0c636b836b332a032402ecdd009538e77f5b1adc6c761658a9300ea26695ffad5c23'
    )
    rsa_keys.append((rsa_key_142, False))

    # High bits known: test for Rivest Shamir
    # Hint: p // 2**341 =
    # 0x592cb5afa7e2c482fc4d705f7367183149e50165eae2a2d89a76a4f95231f3d11ec35b8
    # 3ce980f7d4528251db579f749f143ed6b50997da2dfebab0295422bff0a5e076708ab8d9d
    # 4fd15616257785cfc52d7912401
    rsa_key_143 = paranoid_pb2.RSAKey()
    rsa_key_143.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_143.rsa_info.n = util.Hex2Bytes(
        '9f72c65791dbe3ebf5971559b4bfe65d0a91d116167920c3b813d0fe7395fce8d0e7b5ca8ccce8c375213fbe41abcdb41b74b7434da936bad177c4b89bc256794e5b715ada301cf8108ec78ef417508b2020db2e7648149a83b36173c71996fd30f5b71ac77086014ab1fadd849a96198a4a1c31c38fe390200a77b77d4e106991cbfb59dd8122a5aa2c02209cbc9618fe3ec990b1d90b397b6430425e0a737280976fda588823f48dc97ceaae5653f2ca09fab6c5b8b128429f1cb043cb4e083c996feed55b8030940557c93a7ca4b78c894f449d94ed3aeeb97de5ab92e746dec5a6d9f157d0bd583e7ff28c9f7682069fdd5c08f0d4e4da2215077f4515a1'
    )
    rsa_keys.append((rsa_key_143, False))

    # High bits known: test for Coppersmith
    # Hint: p // 2**512 =
    # 0xfb39cfbe7145c904867144aaf0c8898b33c5688d81d3dd79d37c7642a4c68cda6ffaf05
    # 643594cc1e43346737ff547cfb6c6959ed3fff453bdcfc35bd850f9e2
    rsa_key_144 = paranoid_pb2.RSAKey()
    rsa_key_144.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_144.rsa_info.n = util.Hex2Bytes(
        'c8f4d8c1fb815dfd64298e0d5e45f1b35dd0986f96a868448575405ec38167b64ed2b175fb28bf5c3cd28f05a5810c0ebd47e7026a8ea31c9a210cb6cf56b065d1b8639306c668d3bfc68e1fca160783faf46ac13717a30b32020787687ddd74bd6104d363fb7af67b2cfa5a0ce31b317f2ead15ba3ca9579148338b0033e83d5e5a085b1abc867607cebab93277bf844af899953d419c7f93d02627692d62b5e8a6ec773ca66ebb7f077ebb440df91fd1ff357ad3e1d51619b9d65ab99cd358bab925894acb7266f21d1a4f3bc1e9a477aa0a006d9068cad434ceb2ecb9520c1444742b13fc240ff10b6ff669c74b3399daf9623bddd35ab4ccbe0877da723b'
    )
    rsa_keys.append((rsa_key_144, False))

    # High bits known: test is too difficult for Coppersmith
    # Hint: p // 2**576 =
    # 0xd16dc4ec2b9157ab826d1a8e1557f58c927c46a40605a7b04d9cba39b5190a2e2f33c1c
    # b37a209a48e6688d7cbf522898f4eb42fbed8f534
    rsa_key_145 = paranoid_pb2.RSAKey()
    rsa_key_145.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_145.rsa_info.n = util.Hex2Bytes(
        '9314b3b25453ee02b867112f62864663f18b27630843226cc178e92fccb734b23bab7cb9852587a3b93a9d0aed14d5e0ae5671e0903e02ef3ccafedb2baf779b821fecf4166ec0caf8c5308d593ca761ab45e0515ed8117995f55043c636e83877e14fccf35b9b83e7cfbd26426dcce95b91bf9e63fa6451feccf242881a8530333bb4b0fa06ada9d2857eb9534296b9ae2ca3f815a6fbee47cc0aef3a6e539cd0631d2859d009d52ef4e7766774090614eae814908356d14123ffb934f3efb1dc33ee7efb6abe755106e63fed7975ae0528e63dc74abf0ed58e1d6790432d1a2761ff7d8e9a85b93262b6a25c6bfdd07f174bee284e9e9008d8906ea3cb6e4d'
    )
    rsa_keys.append((rsa_key_145, False))

    # Low bits known: test for Lenstra's "Divisors in residue classes"
    # Hint: p % 2**682 =
    # 0x2a21a3a6bf1d44d7b502367e01d929fe1a764c1628690895233f7df6cdda6de3b713d34
    # 2cc04d242e4fa55bab881a5189343aedba4fa74d1ae2bab1f32200d7e18dd8a5666debb2c
    # f022606b5e7182c6b32b33848d5
    rsa_key_146 = paranoid_pb2.RSAKey()
    rsa_key_146.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_146.rsa_info.n = util.Hex2Bytes(
        'e1a5ac589edb5dad7b6be3c85d5b924e212ac474542b4cb582dbc5c2f35d9c39b7b36ca2dc74c76403503cb7c13d5bdecb927ebc5572928cb73130bbfb015f42b3e33545b7094c91ed8cdb72b65ef77b775409c74932a5d12b677953cd1bff39d1bb465fd38bd02553bfc8425ed395885c2aa19598fff163a0d0ddf622eb5e612ea405074d117bd7a68f6d733018d7f1c808431f56d7df675f988f443a7c68cd8219062b0ee3d76c315f203d7d56cf6e4df6a1b8f062576b52c0f5381d00755f1958c042dd0ec7aa6a4433050f6818c3cfe6b1c7c4f75c4d0b01fcd5ee5ee885a74b9d0e52e4109829cc0f638739823821497624667a41cf374ab4bd79a6f4d7'
    )
    rsa_keys.append((rsa_key_146, False))

    # Low bits known: test for Coppersmith
    # Hint: p % 2**512 =
    # 0xf8df43e975793de36c9cac1da099beddadd7e1404572acf94d2c0bea82db38b51f20af4
    # f2e30a4aee33603b76598531d8dc163a1b6615131aea137e7a05aa5ed
    rsa_key_147 = paranoid_pb2.RSAKey()
    rsa_key_147.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_147.rsa_info.n = util.Hex2Bytes(
        'b39ea6cffd7e95132a6cb131ae2644da9fbeff041f2b1718a5d56fb69950d40ea1ea8391faee6bf9a69500e28fc111e0300fa1a4c92820b1cc78b929ca0227c6af5c060d38103a99623e5b021d508c01c1091b87283ae98bf9fc368a741509bf393e972d9d58f34ed6d2e8494cf970b6b4c50ff6deea8906727d5ab8c9716ed272157df1164de123c57849f594afb6c1506fcdf327648af1d0fb0d691a70161c5786cd9debb6fb31d91294ed9bd3fc82fd4641d4a02af1c370a9215823db95b680e97d2e4bc91c19b588ede4b1fb076e28726260586db14d44fb5579f0fc8fd918b54cf49cdfc0777e69313cab6a53cee148994883d1e755799107a9ce738071'
    )
    rsa_keys.append((rsa_key_147, False))

    # Low bits known: test is too difficult for Coppersmith
    # Hint: p % 2**448 =
    # 0x8033ca416e542fda4ca065dc26e2d205db7af1deb94baac258ae1d716808c12389e8577
    # 981395bdba90ab8fdc7cdbc1c1ecf4fed620f4df7
    rsa_key_148 = paranoid_pb2.RSAKey()
    rsa_key_148.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_148.rsa_info.n = util.Hex2Bytes(
        '9521853daccd5136ba31651fd76698383e0419c77743cecd121d5f88eda8a127f5ab3be581a9b1e853e150e60deb55b59947aa3f3f72cb1079b90fd276f83a31e5935b35f8e48247e6e9ab27e261cd359b3c7d48898b4a3a3f460f79424a820be6f09871db1674f734b05801cf58372217b22bc7fdd8cf5088562bc43584ef05713e817e29e2f841584e36ac02d40aef3ca6d691d2f63e5782c7771cffa2cc0548c1342c7e8eea872c48c92df02bfa393cefaa1590f715000f14995a78949bcaa9c7960eff99ac1f436e23b540e32430dfc09cf497618b4f8f492affa48a0c2efe5276c8c7535dc83d0244fb002c0568137298f8b84d46222fd7507321dc1d53'
    )
    rsa_keys.append((rsa_key_148, False))

    # Special case for Fermat with least significant bits
    # Hint: p % 2**512 == q % 2**512
    rsa_key_149 = paranoid_pb2.RSAKey()
    rsa_key_149.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_149.rsa_info.n = util.Hex2Bytes(
        '869f922b3280b5c98a79dc558a98044cd803d47c23639e79ee3213510fc9cc5089d1a13bbad5a2d74f012778cab4a4912cf8cd3d9a66f0fce3b3ed95b36fdee79616b9faac57fdff292eb5b21803f6176e6b8e6b8fcc598cbea97a0f77dc976f74701409fabe2c5a76585d6a0bbd0f14ffd3d126df42a91a339e46ef8d0a4faa0c7793a62f8fa833abf47e7361e0e8246b6c34a06aad890669bd286f7da0b0c57188f87d0efa7f9451683876cfd2dc8b69daf965e639022b8447954731fcb84b9752c5492adcd65575736c9cb72aae448344ab9b010199b5a8c8e43907da335cdc198229b8643b6c1547f4c9706a55c7dee88d3393fa5f5ee645e102c4944729'
    )
    rsa_keys.append((rsa_key_149, True))

    # Special case for Fermat with least significant bits
    # Hint: p % 2**492 == q % 2**492
    rsa_key_150 = paranoid_pb2.RSAKey()
    rsa_key_150.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_150.rsa_info.n = util.Hex2Bytes(
        '929732675dbfe4a4e823191b5225aa1ccadaf05ef158c7b9025771cf4f74cfc8e71fd3c229784cb3b430651cc8d36e76421ccfde37d4bea3aa95c781196856f0f39a6f7cdf40c21892a9f1f87ae9a819ebe26d9dd151115c3029b518565c043d1638581bc9cb255b54c7100043f1354b4c15213df092f385298ceebe038395fd7285385b8e64248a13b913ed9255c5169a43a9498c08bd7b3a0e45c070494d4578de7aee0d3f5af54a594507197284b36c31fc0b27b0b7589ee8c2fb5a0370a476ed157d720b29093e10638619188b9595d2429506af6252f093246c724927cbc5fee9dcfca11e07488630ce3bed1ba0f28bbe08719b55e737c7ce77e4418131'
    )
    rsa_keys.append((rsa_key_150, False))

    # Test for extended Fermat with least significant bits.
    # Hint: p % 2**487 == q % 2**487
    rsa_key_151 = paranoid_pb2.RSAKey()
    rsa_key_151.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_151.rsa_info.n = util.Hex2Bytes(
        'a62ffad5f9697f5bbd30190b2a64f31be70b95723b425ee51d62812f2171f8ac24fb162ec6cca50aac4d83ae449b86268041f770aa64139ca1d1f9e14e9985493520ab6e1de248f85a51c95ada98252bd42a6553320c69aea06f68d1385d4fe76ced44713f9934b2f5c92875ca7921dfd4b6d657e21c0f752c7f0966ea25a503da6ea728a79f56886476b850ad26d5e0b6a70eb3253b292520a23850e28bf3833853fae389b01733f4a786c9bb72b0db558fbcb7a7d611bdf0e17bd315ae5ba20ef8f6fc5f69d352f3928edb70bce7714e4321eca73348d7a530649291b6c25ded722d9f28687860addd684cb10f6a502019319aeebeb39d09604334eb7b3bb9'
    )
    rsa_keys.append((rsa_key_151, False))

    # Test is too hard for Fermat with least significant bits.
    # Hint: p % 2**462 == q % 2**462
    rsa_key_152 = paranoid_pb2.RSAKey()
    rsa_key_152.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_152.rsa_info.n = util.Hex2Bytes(
        'ae6c812f5e1885a70120063a5bb33e1602b34c18fe382fe6d573e9251846d1d6aed3aedf91a7bbd06782cb4da61b4e5b72d83177c0d9506821b349bcae85482a514244207d205f9ea1cbff961206b91cb55430a0b5df0ceb7b4c9a88bb0a5d2157d48484305b19d57cecc64faa25b32ada3a2ea6f73ec1ab799e1e486354d856c86cee93175a35eaf45b104c51a5a1f9385c038cc1e28ac78e90b1842ad90fdfc8654d3550e0440b45e3e316783d98dfd2e90a064ffc197dedd143dd0a0556018e23c12aabd5c75bd89ba0cf7ed68482b7b578dda36f69d84c2581dc487b4326ac02a95feaf3c48143ffc7838f7b33d52d339f82ec7b5f11da44aa966df4f051'
    )
    rsa_keys.append((rsa_key_152, False))

    # Least significant and most significant bits of p and q equal.
    # Hint: abs(p - q) < 2**768 and 0 == (p - q) % 2**256
    rsa_key_153 = paranoid_pb2.RSAKey()
    rsa_key_153.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_153.rsa_info.n = util.Hex2Bytes(
        'e56e1f6256da48f22f2ea15a08ed8cf1a68193b7b0a851145383727a108b317a74c04e4de2440a9b278d3b13a45ee6aabd01ac86f238ebdeef01dc740fb861239ed7896487da86c54ab5e9631c14b16092a6e72ca469c912f6d56b42c9a6a8d8844f74efd125b4e28fdb991d21efe96357fa50390f8f1c4b5f5eb8e4fa9128ff435bbeba908b034f3649bb95c3f514267cc7ac2a8019f8f4150989eaa504c47c4e69f9a139153bf7fea785e49e17a29e4d5cc68154a25b156f475cafce73df5902b7fd4df25300e5b29ef5735c2d2685ee08ffe2bc046363dc5313fcfc9580597fd637aa689d950d5073ee4855b595fac62a904f84d5deba2642adcaca54c7d9'
    )
    rsa_keys.append((rsa_key_153, True))

    # Least significant and most significant bits of p and q equal.
    # Hint: abs(p - q) < 2**793 and 0 == (p - q) % 2**231
    rsa_key_154 = paranoid_pb2.RSAKey()
    rsa_key_154.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_154.rsa_info.n = util.Hex2Bytes(
        'b6db16121d4ed64631d9e824278aab55d25e04df705d5a235ecf80c67bcd119120f5ee29f0c302f4e968981d7748d0c1290fdb2d077b0bbeda31743c9c38ca41824b8db1ed6cb8933a2a94991346a0f8cc03f4c4f4d50a56c523703c0b9529206025cc93f396ff8304232d05d6a35ec4c444ebf0c1d3433021c6c799f38e750a201ae452fcb2a77e3ff30e2144ef3d82ff3765a8f10c088b7cd267941138c0cd9d005205b11954722d0c07a987fa12b55377c568487b5641640cabb52fcb18920123e630d78f009a70a6edc4926f724e6cf0805b6556cd386b77ee96e71529750f263a38ccbade761ce77053ce6297a2d1eb8448ca50172ff5550cc8d549db19'
    )
    rsa_keys.append((rsa_key_154, False))

    # Least significant and most significant bits of p and q equal.
    # Hint: abs(p - q) < 2**818 and 0 == (p - q) % 2**206
    rsa_key_155 = paranoid_pb2.RSAKey()
    rsa_key_155.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_155.rsa_info.n = util.Hex2Bytes(
        '88097f3f339feb74f4b39ca0b9315a3e1effa95bbc6dd575a4408524964d3af79e3e50699e3371c7e673f117a638bd0d6054f9b92baa2a63bf7a0e1386fb30c6e0409482678e385ab678eae34890ec6fbc3420881058c8b97d71e24079d0b2adb73a4afb191c38df7f69b5b1e78b0bac81ea3233f2988bf88ea5f307982397fbf9a0fdf03090fed1222d393672b4e226db2a46d3958e926b14b2a266bbc99c5fa038f090291cc99562c875d75b24864098fb48c2c7adde995885b3f703ecb8546f0f19ce670d283a831d5254d80c666ff030abd7ef86b28b94b4875e3cfde927a237a8843996d5dbcbac22f0d03889f9f1682978b7fb892587d774ef13703d19'
    )
    rsa_keys.append((rsa_key_155, False))

    # Test case for weak primes with java.util.Random
    # Hint: one prime is the smallest prime >= x, where x has been generated as
    # new BigInteger(bits, rand).set.Bit(bits - 1) and rand is an instance of
    # java.util.Random.
    rsa_key_156 = paranoid_pb2.RSAKey()
    rsa_key_156.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_156.rsa_info.n = util.Hex2Bytes(
        'ab41f6dd03db026a2daf4141531e16616a91e130e99aa94a8adad4c82f2bdb3485948e4f5d8968f489c5eb822df8a39a4cbc26c9c8de97a041f6b78f475f01f0a15bd2f61b13e1576fe3a49c4f24f0c04662ab5acaecf1acc3d0daf87c47e6247d86e541eb70991afacb3dad3a25c7599a9f00c9a10805bf08d717a1bbfbd40c62521d701f2aed4fdcc62539c4f379e0a5f40b5de14d9ef30631749ac0bee22a81de2048fbd0b716c5fde7e8a5c9eeb52311187eb2196f0fcefe79ad6aa9122f384169167e034f8b42616fca7f40ad22c53702809d0cba4d746886f72112805a2a10270f4af7072f2fd243927ddfa14b863fca07499898822bbeba6c8eb608fd'
    )
    rsa_keys.append((rsa_key_156, False))

    # Test case for weak primes with java.util.Random
    # Hint: both primes are the smallest prime >= x_i, where x_i has been
    # generated as new BigInteger(bits, rand_i).set.Bit(bits - 1) and rand_i are
    # two instances of java.util.Random.
    rsa_key_157 = paranoid_pb2.RSAKey()
    rsa_key_157.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_157.rsa_info.n = util.Hex2Bytes(
        '8f5f119a8bfce6746344b07c2a2717f7d879373e4ff0ca60c1569f89fd1a0a9c03db25c99537ae2747cff6580a747859e892916917233d7e3928258a0e6acb6809bc7986588179802ad5df95c07625b6ab8f58539ad1b0d8171147f505f8da232d418c565a33078d4d52de1e572cb4bf4c47044a02458967009ac99adaee5a560f0f1897dbeba005645e212285d40be7b0c2cead5333274cd76044d4314b409af38276a386d08736082980ef0d9d01cf9512771cbbc3796494e53a54dcb442c7c4fd17885c9af1140c0b326fef30685691eaed82339c9bb1e7a40ffc64b12723aa1b66dc8cb1ab75c2436b424d96162debb6a6305319becba6b6f02ee50d0ecb'
    )
    rsa_keys.append((rsa_key_157, False))

    # A weak key in a set of 2.
    # Hint: First key of a pair where p-1 and q-1 share a fixed prime divisor of
    # size 512
    rsa_key_158 = paranoid_pb2.RSAKey()
    rsa_key_158.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_158.rsa_info.n = util.Hex2Bytes(
        '9764548a8b10ab9a60d4b42fc33fc702413b5f61b79c999bf48ae0db36660ef4b8670d06e67fe2078d9815c4476a021403ce068db24df009d8e23411e8bee6843a17e9fcf0452f7c09af12b7cea86cd51ba8f674823cd9238566531c80a1f82b8d8b8bad9caa9efcdc4d20b70b84cd4c160faa836d0a112006fde6d629757cebabf70cd95dcdd009b600f276d1219aa2dc0b015d19a13a03eb41241fb8c0f2ead1245ff3561b75622da122e971ae23a8bd8fc392485b327a736b2d2f6677146d05724d3b2a91c8b670369b514e9db663107e78fea62ff523544156982f88cf2044e79bb3fb74b8474dec88847b64c45fbe37d89dba57ac67bfa8352d801a4d3b'
    )
    rsa_keys.append((rsa_key_158, True))

    # A weak key in a set of 2.
    # Hint: Second key of a pair where p-1 and q-1 share a fixed prime divisor
    # of size 512
    rsa_key_159 = paranoid_pb2.RSAKey()
    rsa_key_159.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_159.rsa_info.n = util.Hex2Bytes(
        'c4932dbeb2611f6acc3ff5682ae7edcc32ef537e60948f579ec59a1ca6bae2e9691bdf0b7b30aae23cec6bd66a30d68d245396305041dc17c98cc182676130144b6b578fbaf8363dd5fd8d75bfcec3ef03f691289f458338db7cc53d76b3bfafd1dc51d0d2334ea6f62e3ee5241d756a0f6441ca32804fc9e613e9c040d9b7e900fd9f7f2858c8a717419f2bcfbb770a54a8ac925c7bf32aa119b340fb2c015ecd16670c77690bdb362bdfe53798059c3e3c674eb7083d0bcbb32364e0372a09b60e40602bc512f28ddaff8de4fd2cb50133cd5b235b558cca7c128749eeec0423d3d8ad1136b41fcde24c866be3ecbf928cfad093698c21aa16f6b911aa955b'
    )
    rsa_keys.append((rsa_key_159, True))

    # Hint: one prime has Hamming weight 16
    rsa_key_160 = paranoid_pb2.RSAKey()
    rsa_key_160.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_160.rsa_info.n = util.Hex2Bytes(
        'b436927bebede707cd60eea20d6f2f4430eb81d4605513cd82bb1cb923a422536c30d6954ca9e3ffe0b37139e8f5e2748432772f2a5803093240d93247ea448544f58e264f8966803d4537b843e21721550fd1fbbab2c93bf21a570e4d1229e918af6eef52906c9cd4b46b9cf9fbae1cf7727663482be83fb58a64e10424b423c96b9fdbea1d1ac0c5abc7b31b719d3af8955fe67bb8e665e282eb7a80854506ad6596598534a01bd66002a2282eb7979b15d6b6f30b2f1d9a671adf3ff99695e7ec375b4d04684a4780ddc298fa117debc46b54db242be973a0a828def4f06225c25a5e16aa798eaacc8a8e148260e7d37163af5069f521046beb5d8782290f'
    )
    rsa_keys.append((rsa_key_160, False))

    # Hint: one prime has Hamming weight 32
    rsa_key_161 = paranoid_pb2.RSAKey()
    rsa_key_161.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_161.rsa_info.n = util.Hex2Bytes(
        'a025d730b305d9a97a33135b1ff9507de4e03cf47b7831805a75d9c05707c4d2afac4ef808c1c3ce0bbc363ecd1bae08f56fdd5adc1a0809d34fc02897b9863c23918a184784e70bf20fc21a810ff838e24c91917e0ec6c74e0ddd9edcba02626a124c19ce5827c33a575a0f82510661905558354b52bdedeab7701d6b7331e1de0fe2a9b7ab898b6ecf99c20777edd21aa06527001948a40a06a06a11095fefe8db4d04f8a10ec9d90da3898e2b9c262814897c7e2353eed8a3997001f329bfb5bec4efe9de6b67293feed9cd2ac124485898005a613b41a8d0e013762c501f0c472298d39ad059b9f049ffa96b9c1c320090d2dc59735c6d5efd7540432aed'
    )
    rsa_keys.append((rsa_key_161, False))

    # Hint: both primes have Hamming weight 32
    rsa_key_162 = paranoid_pb2.RSAKey()
    rsa_key_162.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_162.rsa_info.n = util.Hex2Bytes(
        '90018000000c01a06001e0c42008003814816002c2008038013080664402006021c03ba0042b9748b051e408cbcc06527230f10b1a4822966cce78460a129823201fe45451841676b1901826b2c9f079d03e1292df09f3e4fecceb81a99660ad1c2562c4cb01321484016ecda42a62aaad8ef893dd72330be7e95d59d3db57f5ddfc9eaa2ce1b1788212c9cb3045072162b62fb2a762619210c0870a3b11482a892e690245442d42c822120482852518426d401e9168998b569338060b1520081c80119180d80524855c2dc004af0111011006220040810420008298101020600042400000080000108000420200421000000800000000000000000840000001'
    )
    rsa_keys.append((rsa_key_162, True))

    # Hint: both primes have Hamming weight 64
    rsa_key_163 = paranoid_pb2.RSAKey()
    rsa_key_163.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_163.rsa_info.n = util.Hex2Bytes(
        '90006300c266b006209204ec66a1506a3a17a5522e69212af14643978a1ad384e26f9f8bb9ccfd3d7a46f79a9506685edbc073f8e5b86b138294663e204fcc677f93c2c0a93fa74312cb2b261aaa61a48a4b72483605100577135d5e30c81526ec975f88dde02ffc93c762e699ceda5b19d22ee3b358ac64011d007ae5eddbcf16214bbd16ce869f520f1d95e9ff4ed43977a0ae387eaa34ab8e1881591631daedbc01c813a458c4c6e62dbc2a95763f157b55bf87d0304cec89cb88ec9bb9c8ef31a55f4ddd2aaef04c61efb0caf875bdcc56fe7972d96cf3e2c76d596c65588b19e81568933eb009300926f5543fa12f8480901544225881610048420000a1'
    )
    rsa_keys.append((rsa_key_163, True))

    # Hint: both primes have Hamming weight 80
    rsa_key_164 = paranoid_pb2.RSAKey()
    rsa_key_164.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_164.rsa_info.n = util.Hex2Bytes(
        '903c04187a3a0a050704c52812e6615520a5fb4c37b44dfe52c19f8f6e9d7c4bc1c14af81816c6119cf375ad070bb7ba6ba05140cc3648938aa68639a0a2808d2e06650a1f6e90dfdec6cb6e5c3115ba93babaee93b046216d585836e10a16d14d6fae4b019894bb757fc7f2c1a15300d35b22335e326d4609444dcc9a07f03dcfd9ca070757c5b0647b90ecb29714b2f9344047d7f8ec0dc5b877927969a2a9508592205dc1a76e36866f5b6a05e29c7d61fa2b54fab36d7ffe88d773cc20c49b9eea38b5eb635fdb063b102d68b749d21516c58638d24023d3a5212bb264c6202a4494136e62a430079ac8ff558cf54b0d7a1ead859c09b8a0224c86060203'
    )
    rsa_keys.append((rsa_key_164, True))

    # Hint: both primes have Hamming weight 128
    rsa_key_165 = paranoid_pb2.RSAKey()
    rsa_key_165.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_165.rsa_info.n = util.Hex2Bytes(
        '93018003c0019b6efbebb532cbe20cd4efeef9c5424f84bbb22589ad9cd580717ae66eef0819e490193ecb94e39fdad16af6bc3c06ceb2cbfc2c84c59bd00fb3a5526bf7ac22297dff4e9ef540fa1499231f683816d71d3586d9a2a9d5eeab2eec3002f4766424c8fe4c48901f55a15b8f0a89053c3d2fc2e504a0bf14c67a04da7ebe7ae663bac2e329d72263665a412f21812f1af62c4d534a47c5408c6d786393528a4dc71970a103ace0276e534f956d1da95c638ebf4e6043fbe7bb8af2f39741b5c92d61b754e46019334117d51a0b0601c4c75150fd7f5175e85db8e35e6abec0bb6e8c0f280169f65b067cc42f3565433bb1e0ac5599109506034801'
    )
    rsa_keys.append((rsa_key_165, False))

    # Hint: both primes have Hamming weight 256
    rsa_key_166 = paranoid_pb2.RSAKey()
    rsa_key_166.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_166.rsa_info.n = util.Hex2Bytes(
        'c3f6a77ffd40fa17ef502085d51d1de94ee9287fa670c3ab1293452b8db0a7f1dc90f80d1813bb728eae48415f19c7ae70a8af79edc32b6ae3a5d9e1c4737a0aa269fc4631cc643b5f3a62176527cb223f0a52b8e8381d6716c01cd6c0f1f99a9bb98443397d033d10c9f66881f85a87d4c7a90360b3cf103aa6ee92a906f187a1af648e6e7b9bc473e35c7ebeb7ab1942c338631f78bfd74f3cbe55c5febeadfaa2b4d2a034ab6f0daa035ce0455f0ec0a4dd4097db6f947dd73fe061a5728886f165c342d5954522d5e75af2668c4534c872a4d05ad9da4997725e96443377cc10c2a15529535f12cc1330f103480c7756236f9f8ddfda58216c1a3c68ab45'
    )
    rsa_keys.append((rsa_key_166, False))

    # Hint: n is a quadratic residue modulo the 64 smallest primes.
    rsa_key_167 = paranoid_pb2.RSAKey()
    rsa_key_167.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_167.rsa_info.n = util.Hex2Bytes(
        'd3edb3ef3f7573f5258d28567e071dce69299cde73e43489316c9a23aed2e3940ecf0400adbe026cd4d58a86e792835214f1e789057d803f2d589f5ebedf1dcf96459aa47e7f6cbde1e8a0fb4ddf7ccdb1d94dc98fe0106a7065171a6ece4ce758194006ac480b963eaa397542d2caab63e18376824e455549f53b9b6bb7d60b3903772968d8c2c86fa0dc19cc32f1c20a0ae287daa1c62d96d6bb099fd8f2b74274aa69d7798de26f93cabb3d742820a2f69e7b3ea2240a3d47e46c041b31c24c0608d8a1abb4e475dfd75f88bd19f41e717932e8e747a247ba26c025c4deb41d76330e81f18404a1e0ec18ccb88d6a6b2b42f4e9f6cd8d657a1fcd27635835'
    )
    rsa_keys.append((rsa_key_167, True))

    # Hint: The upper 768 bits of the two primes have Hamming weight 72
    rsa_key_168 = paranoid_pb2.RSAKey()
    rsa_key_168.rsa_info.e = util.Hex2Bytes('010001')
    rsa_key_168.rsa_info.n = util.Hex2Bytes(
        'a087465b31222c3b3055121853a1c830f009393189fcc2eaba5fac5b4076ea1ee8ddbef45b0c883eb3b32b91bb15dd74aacf03730788ea3e16edb8028fe9265efa3fc22ae873ae0965960e4ac5d542c63eb0efc75f4ac0f407dc17327dfea17ed0e0ef17bc7e7b2556851552f99685809239c4a8e400640e4e172a1fad8837f140775f78bf3faf550f151f04efb441891a7112b1b0d1245cfc2224fc929731d617de98ad714c5c4bd7c48766632f683a344286caf84a9fa7944c234fc07c502affe4e801fc669d7b7548ea502a0b8b76659de61506205269b080a5c1f0a88e015fb86a9742266d58f41dcd8fb4ddbe913ec894cbdbe287dbc154220759603be3'
    )
    rsa_keys.append((rsa_key_168, True))
    return rsa_keys

  def testCheckProgress(self):
    keys = self.rsa_test_keys()
    protos = [proto for proto, _ in keys]
    self.assertTrue(paranoid.CheckAllRSA(protos))
    # Many of the test keys use primes of size 512. Hence these keys
    # fail the test for key sizes. Thus the check for key sizes is ignored
    # in the code below. The real question is whether the weak primes used
    # for the keys are recognized.
    errors = 0
    new_failures = 0
    for i, (key, expect_fail) in enumerate(keys):
      if key.test_info.weak:
        failed_tests = []
        for test_result_entry in key.test_info.test_results:
          if (test_result_entry.result and
              test_result_entry.test_name != 'CheckSizes'):
            failed_tests.append(test_result_entry.test_name)
        if failed_tests and not expect_fail:
          logging.info('Key %d failed for: %s', i, failed_tests)
          new_failures += 1
        elif expect_fail and not failed_tests:
          logging.info('Key %d was expected to fail.', i)
          errors += 1
    self.assertEqual(0, errors)
    # New failures typically happen after improving or adding
    # new checks. Of course, this means that the newly failing keys
    # have to be marked as "expecting to fail".
    self.assertEqual(0, new_failures, 'regression_test outdated?')


if __name__ == '__main__':
  absltest.main()
